{"fields":["title","description","body"],"pipeline":["trimmer","stopWordFilter","stemmer"],"ref":"id","version":"0.9.5","index":{"body":{"root":{"docs":{},"df":0,"1":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":2.0},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":2.0},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.4142135623730951}},"df":4,".":{"docs":{},"df":0,"1":{"docs":{},"df":0,"7":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1}}},"2":{"docs":{},"df":0,"0":{"docs":{},"df":0,"9":{"docs":{},"df":0,"6":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0}},"df":1}}}}},"3":{"docs":{},"df":0,"4":{"docs":{},"df":0,"5":{"docs":{},"df":0,"6":{"docs":{},"df":0,"7":{"docs":{},"df":0,"8":{"docs":{},"df":0,"9":{"docs":{},"df":0,"1":{"docs":{},"df":0,"2":{"docs":{},"df":0,"3":{"docs":{"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.0}},"df":1}}}}}}}}}}},"4":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0}},"df":1,".":{"docs":{},"df":0,"x":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1}}}},"2":{"docs":{"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":2.0},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.4142135623730951}},"df":2,".":{"docs":{},"df":0,"0":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1}},"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"9":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0}},"df":1}},"1":{"docs":{},"df":0,"2":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0}},"df":1},"3":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0}},"df":1},"4":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.4142135623730951}},"df":1},"5":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.4142135623730951}},"df":1},"6":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.4142135623730951}},"df":1},"9":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.4142135623730951}},"df":1}},"2":{"docs":{},"df":0,"4":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1}}}},"3":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.4142135623730951}},"df":3},"4":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.4142135623730951}},"df":3,".":{"docs":{},"df":0,"0":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0}},"df":1}}},"5":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.4142135623730951}},"df":2},"6":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0}},"df":1},"_":{"docs":{},"df":0,"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"_":{"docs":{},"df":0,".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1}}}}}}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,".":{"docs":{},"df":0,"m":{"docs":{},"df":0,"d":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1}}}}}}}}},"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"v":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.4142135623730951}},"df":2}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.4142135623730951}},"df":1}}}}}}},"c":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0}},"df":1}}},"p":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":3}},"s":{"docs":{},"df":0,"s":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":3.7416573867739413},"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":2.0},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":4.242640687119285},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":2.0},"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":3.3166247903554},"http://127.0.0.1:1111/redshift-federated-query-with-aurora-mysql/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":3.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":12}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0}},"df":2}},"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":4.898979485566356},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":5.385164807134504},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":3.605551275463989},"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":5.385164807134504},"http://127.0.0.1:1111/redshift-federated-query-with-aurora-mysql/":{"tf":2.8284271247461903},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.7320508075688772}},"df":7,".":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{},"df":0,"m":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.0}},"df":1}}}}}}}}},"u":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":2}}},"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"v":{"docs":{"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0}},"df":4}}}},"t":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":3.1622776601683795},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":4.58257569495584},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.4142135623730951}},"df":4,"s":{"docs":{},"df":0,"/":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"u":{"docs":{},"df":0,"b":{"docs":{"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0}},"df":1}}}}}}}}}},"v":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.0},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.0}},"df":3}}}},"d":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":2.23606797749979},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/redshift-federated-query-with-aurora-mysql/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.7320508075688772}},"df":5,"d":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":2.0},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":3.1622776601683795},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/redshift-federated-query-with-aurora-mysql/":{"tf":2.0}},"df":7,"i":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.4142135623730951}},"df":4,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0}},"df":4}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.4142135623730951}},"df":1}}}}},"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1}}},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.0}},"df":3}}}}}}}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1}},"g":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.0}},"df":3}}},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":2.23606797749979},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/redshift-federated-query-with-aurora-mysql/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.4142135623730951}},"df":10}}},"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":3}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":3}}}},"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.4142135623730951}},"df":1}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0}},"df":1}}},"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1}}}}}},"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":2}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"z":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":2.23606797749979},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/redshift-federated-query-with-aurora-mysql/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":2.23606797749979}},"df":6,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"z":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}},"p":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":2.0},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/redshift-federated-query-with-aurora-mysql/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":6},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0}},"df":1}}}}}}}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"y":{"docs":{},"df":0,"s":{"docs":{"http://127.0.0.1:1111/redshift-federated-query-with-aurora-mysql/":{"tf":1.0}},"df":1,"i":{"docs":{"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.7320508075688772}},"df":1},"t":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.0}},"df":2}},"t":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0},"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.7320508075688772}},"df":2},"z":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":2.6457513110645907}},"df":1}}}},"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":2.449489742783178}},"df":1},"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1}}}}},"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":5}}}},"p":{"docs":{},"df":0,"i":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":2.23606797749979},"http://127.0.0.1:1111/terraform-stacks/":{"tf":2.449489742783178},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.7320508075688772}},"df":5},"p":{"docs":{"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.0}},"df":2}}},"l":{"docs":{},"df":0,"i":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0},"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":2.6457513110645907},"http://127.0.0.1:1111/terraform-stacks/":{"tf":2.23606797749979},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.4142135623730951}},"df":7,"c":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":2.6457513110645907},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":2.23606797749979}},"df":7}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.7320508075688772}},"df":4}}},"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.0}},"df":2}}},"v":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":2.449489742783178},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":2.23606797749979},"http://127.0.0.1:1111/terraform-stacks/":{"tf":2.449489742783178}},"df":3}}}}},"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/redshift-federated-query-with-aurora-mysql/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":5}}}}}}}}},"g":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":2.23606797749979},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":3}}}}}},"n":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0}},"df":1},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1}}}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1}}}}}}},"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":4.58257569495584}},"df":1}},"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.0}},"df":2}}},"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":3.3166247903554},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0}},"df":3}}},"u":{"docs":{},"df":0,"m":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0}},"df":2,"p":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0}},"df":1}}}}}},"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":2.6457513110645907},"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":2.6457513110645907}},"df":2}}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.4142135623730951}},"df":2}}}}},"u":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0}},"df":1}}},"t":{"docs":{"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":1}}},"g":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.4142135623730951}},"df":1},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{"http://127.0.0.1:1111/redshift-federated-query-with-aurora-mysql/":{"tf":2.8284271247461903}},"df":1,"(":{"docs":{},"df":0,"m":{"docs":{},"df":0,"y":{"docs":{},"df":0,"s":{"docs":{},"df":0,"q":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/redshift-federated-query-with-aurora-mysql/":{"tf":1.0}},"df":1}}}}}}}}}},"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":2.23606797749979}},"df":5}}},"o":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":2.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":3}}},"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"v":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.4142135623730951}},"df":1}}}}}}},"m":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":5,"a":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":2.6457513110645907},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.4142135623730951}},"df":5}}}}}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.4142135623730951}},"df":4}}}},"w":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":2.449489742783178},"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":3.872983346207417},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":3.605551275463989},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":2.23606797749979},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":2.23606797749979},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/redshift-federated-query-with-aurora-mysql/":{"tf":2.0},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":3.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.4142135623730951}},"df":11,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":2}}},"s":{"docs":{},"df":0,"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"_":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"y":{"docs":{},"df":0,"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0}},"df":1}}}}}}}}}}}}},"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0}},"df":1}}}}}}}}}}}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"g":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"g":{"docs":{},"df":0,"_":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"s":{"docs":{},"df":0,"_":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"_":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"y":{"docs":{"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.0}},"df":1}}}}}}}},"’":{"docs":{"http://127.0.0.1:1111/redshift-federated-query-with-aurora-mysql/":{"tf":1.0}},"df":1}},"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0}},"df":2,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.7320508075688772}},"df":2}}}}},"r":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0}},"df":1},"s":{"docs":{},"df":0,"e":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":7},"i":{"docs":{},"df":0,"c":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":2.6457513110645907}},"df":1,"w":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.7320508075688772}},"df":1}}}}}},"t":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1}}}},"e":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0}},"df":1,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0}},"df":2}}},"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":6}}},"g":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.0}},"df":5}}},"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0}},"df":2}}}},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":3}},"w":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":2.0},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/redshift-federated-query-with-aurora-mysql/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":5}}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1}}}}},"s":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0},"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0}},"df":2}},"t":{"docs":{},"df":0,"a":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1},"w":{"docs":{},"df":0,"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/redshift-federated-query-with-aurora-mysql/":{"tf":1.0},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":4}}}}}},"i":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0}},"df":1,"g":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1}}}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"u":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0}},"df":1}}}}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.7320508075688772}},"df":1}}}}},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":2.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":4.69041575982343},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":3}},"g":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":2.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0},"http://127.0.0.1:1111/redshift-federated-query-with-aurora-mysql/":{"tf":1.0},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.4142135623730951}},"df":11}},"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":2.8284271247461903}},"df":1}}}}}}}},"o":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"/":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"/":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"h":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0},"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.4142135623730951}},"df":6}},"x":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":2.8284271247461903},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":3}}}},"e":{"docs":{},"df":0,"w":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0}},"df":1}}}},"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"g":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":3.605551275463989}},"df":1}},"e":{"docs":{},"df":0,"f":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":2}}}},"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":3.0},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0},"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.4142135623730951}},"df":5,"’":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0}},"df":1}}}}},"g":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0}},"df":1},"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":2.8284271247461903},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":6,"e":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0}},"df":1}},"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0}},"df":1}}}}},"t":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.7320508075688772}},"df":3}}},"s":{"docs":{},"df":0,"i":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":5.0990195135927845}},"df":2}},"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0}},"df":3}}}}}},"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":3}},"n":{"docs":{},"df":0,"’":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":2}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.4142135623730951}},"df":4}}},"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.0}},"df":1}}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0}},"df":3,"–":{"docs":{},"df":0,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0}},"df":1}}}}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"g":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":4.58257569495584},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":3.4641016151377544},"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.7320508075688772}},"df":3,"’":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0}},"df":1}}}}},"e":{"docs":{},"df":0,"g":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0}},"df":1}}}}}},"u":{"docs":{},"df":0,"s":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1}}},"d":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":2.23606797749979}},"df":1,"c":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0}},"df":1},"k":{"docs":{"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.4142135623730951}},"df":1}},"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":2.23606797749979}},"df":1}},"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"/":{"docs":{},"df":0,"g":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.0}},"df":1}}}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":3}}}}},"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1}}}}}}}},"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1}}}}},"n":{"docs":{},"df":0,"g":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":2.0}},"df":4}},"r":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/terraform-stacks/":{"tf":2.0}},"df":3}},"n":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.4142135623730951}},"df":1}}}}},"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":2.0}},"df":1}}},"o":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0}},"df":2}},"o":{"docs":{},"df":0,"s":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":2.23606797749979},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":5}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":2.8284271247461903}},"df":1}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.0}},"df":2}}}},"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"f":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.7320508075688772}},"df":1,"i":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0}},"df":1}}}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0}},"df":1}}},"i":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":2,"c":{"docs":{},"df":0,"k":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":5.291502622129181},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":3.0},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":2.449489742783178},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":3.0},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.0}},"df":5}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":3.605551275463989}},"df":2}}}},"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.4142135623730951}},"df":1}},"u":{"docs":{},"df":0,"d":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":3.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":2.6457513110645907}},"df":5,"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0}},"df":1}}}}}}}},"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":2.449489742783178},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":3.0},"http://127.0.0.1:1111/redshift-federated-query-with-aurora-mysql/":{"tf":2.449489742783178},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.7320508075688772}},"df":4}}}}}},"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":2.0},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":3.3166247903554},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.4142135623730951}},"df":8,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":3.872983346207417},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0}},"df":2}}}}}}},"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":2.0},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.4142135623730951}},"df":4}}}},"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":2}}}},"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":3.4641016151377544}},"df":2,"/":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0}},"df":1}}}}}}}},"m":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0}},"df":2}}},"e":{"docs":{"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":1},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":2.0}},"df":2,"(":{"docs":{},"df":0,"t":{"docs":{},"df":0,"f":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1}}}}}}}}}}},"i":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":2}},"o":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":4}},"u":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0},"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":2.0}},"df":3}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":1}}}}}},"i":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":3},"x":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.7320508075688772}},"df":2}}},"c":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/terraform-stacks/":{"tf":3.605551275463989},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":4,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"s":{"docs":{},"df":0,"(":{"docs":{},"df":0,"d":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":1}}},".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"f":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,".":{"docs":{},"df":0,"h":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1}}}}}}}}}}}}},"’":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.4142135623730951}},"df":1}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":3}}}}}},"u":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":3}}}},"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":2.23606797749979},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":2}}},"i":{"docs":{},"df":0,"s":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1}},"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.4142135623730951}},"df":7}}}},"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.4142135623730951}},"df":1}},"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0}},"df":1}}}},"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.0}},"df":1},"g":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1,".":{"docs":{},"df":0,"g":{"docs":{},"df":0,"o":{"docs":{"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0}},"df":1}}},"u":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":2.449489742783178},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":2.8284271247461903},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":2.8284271247461903},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":2.8284271247461903},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":2.449489742783178},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":2.0},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":2.449489742783178},"http://127.0.0.1:1111/terraform-stacks/":{"tf":4.898979485566356},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":4.0}},"df":11,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,".":{"docs":{},"df":0,"m":{"docs":{},"df":0,"d":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1}}}}}}}}}}}}},"j":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1}}}}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0},"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.4142135623730951}},"df":6}}}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.4142135623730951}},"df":4}}},"o":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.7320508075688772}},"df":3,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{},"df":0,"m":{"docs":{},"df":0,"l":{"docs":{},"df":0,"#":{"docs":{},"df":0,"s":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.7320508075688772}},"df":1}}}}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1}}}}},"u":{"docs":{},"df":0,"m":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":4.123105625617661}},"df":1,"p":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.4142135623730951}},"df":2}}}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.4142135623730951}},"df":5}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":2.0},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.0},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0},"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/redshift-federated-query-with-aurora-mysql/":{"tf":1.0},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":13}},"x":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.4142135623730951}},"df":1}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"u":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":2.23606797749979},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0}},"df":2}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1,"o":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0}},"df":1}}}}}},"o":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":2.23606797749979},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":4}}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.4142135623730951}},"df":2}}}}},"o":{"docs":{},"df":0,"k":{"docs":{},"df":0,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.4142135623730951}},"df":1}}}}}}},"r":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":2}}}}},"p":{"docs":{},"df":0,"i":{"docs":{"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"e":{"docs":{"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":1},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":1}},"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":2}}}}}}}},"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":1}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.0}},"df":3}}}},"r":{"docs":{},"df":0,"d":{"docs":{"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":1},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":7.416198487095663},"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":3.605551275463989},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":3.3166247903554},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":2.449489742783178},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":3.605551275463989},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":2.449489742783178},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":2.6457513110645907},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":3.0},"http://127.0.0.1:1111/redshift-federated-query-with-aurora-mysql/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":3.1622776601683795},"http://127.0.0.1:1111/terraform-stacks/":{"tf":2.8284271247461903},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":13,"e":{"docs":{},"df":0,"/":{"docs":{},"df":0,"u":{"docs":{},"df":0,"p":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"/":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"y":{"docs":{"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}},"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":4}}}}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":2.449489742783178},"http://127.0.0.1:1111/redshift-federated-query-with-aurora-mysql/":{"tf":1.0},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":8}}}}}},"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0}},"df":2}}}},"i":{"docs":{},"df":0,"c":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":2.23606797749979},"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":3.3166247903554},"http://127.0.0.1:1111/redshift-federated-query-with-aurora-mysql/":{"tf":1.0}},"df":4}}},"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0}},"df":2}}}}}},"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0}},"df":1}}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":3.1622776601683795},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/redshift-federated-query-with-aurora-mysql/":{"tf":1.0}},"df":3}}}}}},"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0}},"df":1}}}}}}},"t":{"docs":{},"df":0,"a":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":2.0},"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":11.269427669584644},"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":3.605551275463989},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":6.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":4.358898943540674},"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/redshift-federated-query-with-aurora-mysql/":{"tf":1.0},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":2.23606797749979}},"df":11,".":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{},"df":0,"m":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.4142135623730951}},"df":1}}}}},"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":2.23606797749979},"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":2.8284271247461903},"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":2.449489742783178},"http://127.0.0.1:1111/redshift-federated-query-with-aurora-mysql/":{"tf":2.0},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":7}}},"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":1}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"k":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":2.23606797749979}},"df":1}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":2,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"f":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0}},"df":1}}}}}}}}}},"z":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":5.916079783099616}},"df":1,"e":{"docs":{},"df":0,"_":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0}},"df":1}}}}}}},"y":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0}},"df":1}},"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.0}},"df":2}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.4142135623730951}},"df":2}}},"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.4142135623730951}},"df":1}}}}}},"r":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/redshift-federated-query-with-aurora-mysql/":{"tf":1.0}},"df":1}}}}},"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.4142135623730951}},"df":1}}},"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0}},"df":1}}}},"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":2.449489742783178},"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":3}}}},"i":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":2.0},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":2.0},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/terraform-stacks/":{"tf":3.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":2.449489742783178}},"df":6,"i":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0}},"df":1}}}}},"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0}},"df":1}}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.7320508075688772}},"df":1}},"i":{"docs":{},"df":0,"v":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0}},"df":1}},"v":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0}},"df":5}},"m":{"docs":{},"df":0,"o":{"docs":{"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/terraform-stacks/":{"tf":2.0}},"df":2,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.7320508075688772}},"df":6}}}}}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.4142135623730951}},"df":4}}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.4142135623730951}},"df":1}}},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"y":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0},"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":5.477225575051661},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":3.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":5.196152422706632}},"df":5,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"f":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"y":{"docs":{},"df":0,".":{"docs":{},"df":0,"h":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0}},"df":2}}},"s":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.4142135623730951}},"df":3,"e":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"y":{"docs":{"http://127.0.0.1:1111/redshift-federated-query-with-aurora-mysql/":{"tf":1.0}},"df":1}}}}},"p":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.7320508075688772}},"df":3}}}}},"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0},"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":4}}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":2.0}},"df":1}}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":2.0},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.0}},"df":5}}},"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1}}}},"v":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":2.6457513110645907},"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":3.7416573867739413},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.7320508075688772}},"df":7}}}}}},"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":2.0},"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/terraform-stacks/":{"tf":2.0}},"df":5}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.0}},"df":1}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/redshift-federated-query-with-aurora-mysql/":{"tf":1.0}},"df":3}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":2}}}}}}},"s":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"v":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":2.6457513110645907},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":2}},"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.0}},"df":1}}}},"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.7320508075688772}},"df":2}}}},"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":1}}}}}}},"v":{"docs":{},"df":0,"e":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.7320508075688772}},"df":4},"i":{"docs":{},"df":0,"d":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1}}}},"n":{"docs":{"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":1},"o":{"docs":{},"df":0,"c":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1,"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0},"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":2.23606797749979}},"df":3}}}}}},"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"n":{"docs":{},"df":0,"’":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.0}},"df":1}}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":4.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":3,"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0}},"df":1}}}}}}},"n":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1}},"e":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.0}},"df":2}},"w":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.0}},"df":1,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":2}}}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.4142135623730951}},"df":1}}}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1}}}}},"i":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1,"v":{"docs":{},"df":0,"e":{"docs":{"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.0}},"df":1,"n":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0}},"df":2}}}},"o":{"docs":{},"df":0,"p":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.0}},"df":2,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0}},"df":1}}}}}}},"s":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1}},"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"y":{"docs":{},"df":0,"_":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0}},"df":1}}}}}}}}}}}},"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0}},"df":1}},"e":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":2}}},"y":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":2}}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":3.1622776601683795},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.4142135623730951}},"df":6}},"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0}},"df":3}}}}},"s":{"docs":{},"df":0,"i":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.7320508075688772}},"df":1}},"l":{"docs":{},"df":0,"i":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":4}}}}},"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0}},"df":1}},"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"y":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1}}}}}}}},"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.4142135623730951}},"df":3,"o":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":3.4641016151377544}},"df":2}}}},"u":{"docs":{},"df":0,"c":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0}},"df":1}}},"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":3}}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":7}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0}},"df":1}}}}}}}}},"g":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0}},"df":1},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0}},"df":1}}}},"v":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"g":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0}},"df":1},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.4142135623730951}},"df":1}}}}},"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"y":{"docs":{"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0}},"df":1,"e":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"w":{"docs":{"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1}}}}}}}}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":3.0},"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":2.449489742783178},"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/redshift-federated-query-with-aurora-mysql/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/terraform-stacks/":{"tf":2.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":10,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"/":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":1}}}}}}}}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.4142135623730951}},"df":1}}}}},"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0}},"df":2}}}},"g":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":3}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0}},"df":1}}}}},"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/redshift-federated-query-with-aurora-mysql/":{"tf":1.0},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.0}},"df":5}}}},"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":2.449489742783178},"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":2.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":11}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":3.0},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.0}},"df":3,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":2.23606797749979}},"df":1}}}}}},"i":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.4142135623730951}},"df":1,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1}}}},"t":{"docs":{},"df":0,"i":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"i":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.4142135623730951}},"df":1}}},"v":{"docs":{"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0}},"df":1,"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":5.385164807134504},"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":5.5677643628300215},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":2.8284271247461903},"http://127.0.0.1:1111/terraform-stacks/":{"tf":2.449489742783178},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.4142135623730951}},"df":8,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0}},"df":1,"’":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0}},"df":1}}}}}}}}}}},"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0}},"df":2}}}},"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1},"t":{"docs":{},"df":0,"i":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.0},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":5}}}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0},"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":2.0},"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.7320508075688772}},"df":9}}}}}}}},"t":{"docs":{},"df":0,"c":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":2},"l":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":2.0}},"df":1}},"u":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.4142135623730951}},"df":1},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.4142135623730951}},"df":1}},"r":{"docs":{},"df":0,"y":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"h":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.4142135623730951}},"df":4}}}}}},"x":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1}},"p":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.0},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0},"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.4142135623730951}},"df":7,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"/":{"docs":{},"df":0,"g":{"docs":{},"df":0,"o":{"docs":{},"df":0,".":{"docs":{},"df":0,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1}}}}}}}}}}}}},"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1}},"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0}},"df":1}}}},"i":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1}},"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1}}}},"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":3.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":4}}}},"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.4142135623730951}},"df":5}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0}},"df":2}},"r":{"docs":{},"df":0,"i":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":2},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0}},"df":1}}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/redshift-federated-query-with-aurora-mysql/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":2}},"n":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0}},"df":1}},"o":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":8}}},"o":{"docs":{},"df":0,"s":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0}},"df":1}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.7320508075688772}},"df":1}},"r":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/redshift-federated-query-with-aurora-mysql/":{"tf":2.23606797749979}},"df":3}}},"r":{"docs":{},"df":0,"a":{"docs":{"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.0}},"df":1}}}}},"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.4142135623730951}},"df":4}}}},"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0}},"df":1}}}},"i":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1}},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":1}}}}}},"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0}},"df":1}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0}},"df":1}}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":4}}}},"b":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.4142135623730951}},"df":1},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/redshift-federated-query-with-aurora-mysql/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.4142135623730951}},"df":3}}},"e":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0}},"df":1}}},"w":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.0}},"df":2}},"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.4142135623730951}},"df":1}}},"l":{"docs":{},"df":0,"e":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":2.0},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":2.6457513110645907},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":3.3166247903554},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.7320508075688772}},"df":8,"s":{"docs":{},"df":0,"y":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":1}}}}}}},"l":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0}},"df":1},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":4.795831523312719}},"df":2,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.4142135623730951}},"df":1}}}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,".":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{},"df":0,"m":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0}},"df":1}}}}}}}}}}}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":4}},"d":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":3},"e":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0}},"df":2}},"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.0},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.0}},"df":5}}},"x":{"docs":{"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0}},"df":1}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0}},"df":1}},"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0}},"df":1}}}}},"o":{"docs":{},"df":0,"w":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":5,"s":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.4142135623730951}},"df":2}}},"l":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1}}},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":2.0},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":3.3166247903554},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":11}}}},"r":{"docs":{},"df":0,"_":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":2.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":2}}}}},"k":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1},"m":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":2.23606797749979},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":3.7416573867739413}},"df":4,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"/":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"/":{"docs":{},"df":0,"d":{"docs":{},"df":0,"g":{"docs":{},"df":0,"/":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.0}},"df":1}}}}}},"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.4142135623730951}},"df":1}}}}},"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0}},"df":1}}}},"h":{"docs":{},"df":0,"y":{"docs":{},"df":0,"b":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0}},"df":1}}}}},"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.4142135623730951}},"df":3,"a":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0}},"df":2}}}},"r":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0}},"df":2}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"k":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1}}}}}}},"e":{"docs":{},"df":0,"e":{"docs":{"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0}},"df":1}}}}}},"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1}}}}}}},"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0}},"df":1}},"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":3.7416573867739413},"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.4142135623730951}},"df":7,"’":{"docs":{"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":1}}}}}},"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0}},"df":1}}}}}}},"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1}}}}},"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1}}}}},"g":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1}},"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":2.0}},"df":1}}}}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":2.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":2.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.4142135623730951}},"df":5}}}},"i":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":2,"h":{"docs":{},"df":0,"u":{"docs":{},"df":0,"b":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":4.358898943540674},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":3.872983346207417},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":2.23606797749979}},"df":3,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"/":{"docs":{},"df":0,"k":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"s":{"docs":{},"df":0,"/":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"v":{"docs":{},"df":0,"e":{"docs":{"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.0}},"df":1,"n":{"docs":{"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":1}}}},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":3.3166247903554}},"df":1}}}}}},"u":{"docs":{},"df":0,"e":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":2.449489742783178}},"df":1}}},"o":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":2.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":2.23606797749979},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":3.3166247903554}},"df":4,".":{"docs":{},"df":0,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1}}}},"/":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"b":{"docs":{},"df":0,"/":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"/":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"m":{"docs":{},"df":0,"d":{"docs":{"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.4142135623730951}},"df":1}}}},"o":{"docs":{},"df":0,"d":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":2}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":4.123105625617661}},"df":1}}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1}}}}}}},"d":{"docs":{},"df":0,"e":{"docs":{"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0}},"df":1}},"n":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":3.7416573867739413},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/redshift-federated-query-with-aurora-mysql/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":8},"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0}},"df":1}}}}},"p":{"docs":{},"df":0,"h":{"docs":{"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":2}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"p":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/redshift-federated-query-with-aurora-mysql/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.4142135623730951}},"df":6}}}},"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":2.0},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.0}},"df":5,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0}},"df":1}}}}}}},"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{},"df":0,"u":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.4142135623730951}},"df":1}},"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":3}}},"r":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0}},"df":2},"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"f":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"p":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":3,"/":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"p":{"docs":{"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}},"v":{"docs":{},"df":0,"e":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0}},"df":1}}},"c":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":2.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":2.449489742783178}},"df":3,"(":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"p":{"docs":{"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":1}}}}}}}}}}},"p":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":3,"e":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1}}},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0}},"df":1}}}}}},"l":{"docs":{},"df":0,"p":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0},"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0}},"df":2}},"r":{"docs":{},"df":0,"e":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":2,"’":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0}},"df":4}}}},"i":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0}},"df":1}}}}}},"g":{"docs":{},"df":0,"h":{"docs":{"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.4142135623730951}},"df":1}},"l":{"docs":{},"df":0,"i":{"docs":{"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0}},"df":1,"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0}},"df":1}}}}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1,"i":{"docs":{"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":1}}}}}},"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.4142135623730951}},"df":1}},"p":{"docs":{},"df":0,"e":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.0}},"df":2}},"s":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.4142135623730951}},"df":2}},"u":{"docs":{},"df":0,"s":{"docs":{"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"p":{"docs":{},"df":0,"s":{"docs":{},"df":0,":":{"docs":{},"df":0,"/":{"docs":{},"df":0,"/":{"docs":{},"df":0,"a":{"docs":{},"df":0,"w":{"docs":{},"df":0,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"z":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"/":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"p":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"/":{"docs":{},"df":0,"k":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"g":{"docs":{"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,".":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"p":{"docs":{},"df":0,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"/":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{},"df":0,"/":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0}},"df":1}}}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"z":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"w":{"docs":{},"df":0,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"n":{"docs":{},"df":0,"/":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"/":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"k":{"docs":{"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"df":0,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"z":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"/":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"k":{"docs":{"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.7320508075688772}},"df":2}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"t":{"docs":{},"df":0,"/":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"/":{"docs":{},"df":0,"m":{"docs":{},"df":0,"g":{"docs":{},"df":0,"m":{"docs":{},"df":0,"t":{"docs":{},"df":0,"/":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.7320508075688772}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"x":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"/":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"x":{"docs":{},"df":0,"d":{"docs":{},"df":0,"b":{"docs":{},"df":0,"/":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"d":{"docs":{"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0}},"df":1}}}}},"v":{"docs":{},"df":0,"2":{"docs":{},"df":0,"/":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"u":{"docs":{},"df":0,"b":{"docs":{},"df":0,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"/":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"x":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"/":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"x":{"docs":{},"df":0,"d":{"docs":{},"df":0,"b":{"docs":{},"df":0,"3":{"docs":{"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}},"k":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"s":{"docs":{},"df":0,"/":{"docs":{},"df":0,"c":{"docs":{},"df":0,"d":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0}},"df":1}}}},"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1}}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"/":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1}}}}}}}}}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.7320508075688772}},"df":1}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"y":{"docs":{},"df":0,".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{},"df":0,".":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"/":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"/":{"docs":{},"df":0,"k":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"s":{"docs":{},"df":0,"/":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"x":{"docs":{},"df":0,"d":{"docs":{},"df":0,"b":{"docs":{},"df":0,"/":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"j":{"docs":{},"df":0,"k":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"/":{"docs":{},"df":0,"w":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,".":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"u":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"df":0,"w":{"docs":{},"df":0,"w":{"docs":{},"df":0,".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"/":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"y":{"docs":{},"df":0,"/":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"/":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"x":{"docs":{},"df":0,"d":{"docs":{},"df":0,"b":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":1}}}}},"i":{"docs":{},"df":0,"'":{"docs":{},"df":0,"m":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0}},"df":1},"v":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.4142135623730951}},"df":1}},"a":{"docs":{},"df":0,"m":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":2.449489742783178},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":3.1622776601683795},"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":3.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":7,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}},"d":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.0}},"df":4,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1}},"n":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/terraform-stacks/":{"tf":2.0}},"df":4,"i":{"docs":{},"df":0,"f":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0}},"df":1,"i":{"docs":{"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1}}}}}}}}}}}},"p":{"docs":{"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.7320508075688772}},"df":1}},"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.7320508075688772}},"df":3,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"k":{"docs":{"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":2.0}},"df":1}}}}}}}}}},"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":2}}}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0}},"df":1}},"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":2.449489742783178}},"df":4}}}}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":2.0},"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":2.0}},"df":3}}}}},"n":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"http://127.0.0.1:1111/redshift-federated-query-with-aurora-mysql/":{"tf":1.0}},"df":1}}}}},"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"d":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0},"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":2.6457513110645907},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":2.23606797749979},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":2.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":7}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":2.23606797749979},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":2}}}}}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":2}},"i":{"docs":{},"df":0,"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"u":{"docs":{"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":2}}}}},"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":2}}}}}},"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0}},"df":1}}},"x":{"docs":{},"df":0,"d":{"docs":{},"df":0,"b":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":4.242640687119285},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":2.449489742783178},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":5.196152422706632}},"df":3,"/":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,".":{"docs":{},"df":0,"g":{"docs":{},"df":0,"o":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.4142135623730951}},"df":1}}}}}}},"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1}}}},"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"/":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"/":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}},"3":{"docs":{"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":2.23606797749979}},"df":1,".":{"docs":{},"df":0,"g":{"docs":{},"df":0,"o":{"docs":{"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0}},"df":1}}}},"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.7320508075688772}},"df":1}}}}}},"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.7320508075688772}},"df":1}}}}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.7320508075688772}},"df":1}}}}},"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0}},"df":1}}}}},"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0}},"df":1}}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0}},"df":1}}}}}}}}}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":2.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":2,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":2.23606797749979}},"df":1}}}}}}}},"r":{"docs":{},"df":0,"a":{"docs":{"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.4142135623730951}},"df":1,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":2.449489742783178},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":2.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":2.6457513110645907}},"df":7}}}}}}}}}}},"i":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.4142135623730951}},"df":1,"i":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":2.449489742783178},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":2.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.4142135623730951}},"df":7}}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0}},"df":1}}},"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"b":{"docs":{},"df":0,"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/redshift-federated-query-with-aurora-mysql/":{"tf":1.0}},"df":1}}}}}}}}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/redshift-federated-query-with-aurora-mysql/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":3}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0}},"df":2}}},"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.0}},"df":3}}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":2.23606797749979},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":2.6457513110645907},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.4142135623730951}},"df":4},"n":{"docs":{},"df":0,"c":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/redshift-federated-query-with-aurora-mysql/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.4142135623730951}},"df":5},"t":{"docs":{},"df":0,"i":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":2.6457513110645907}},"df":2}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1}}}}},"u":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.0},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":8}},"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.4142135623730951}},"df":1}}}},"n":{"docs":{},"df":0,"d":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.4142135623730951}},"df":2}}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1}}}}}},"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0}},"df":1}}},"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.0}},"df":4}}},"n":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.4142135623730951}},"df":1}}},"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1}}}},"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.4142135623730951}},"df":1}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1}}}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0}},"df":1}}}}},"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.4142135623730951}},"df":2}}}}}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0}},"df":1}}}}}},"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"v":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0},"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0}},"df":6}}}}},"o":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0}},"df":1}},"s":{"docs":{},"df":0,"n":{"docs":{},"df":0,"’":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"u":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"'":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1},"e":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0}},"df":1}},"’":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":6}},"’":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":2}},"m":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":3},"v":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":2.0},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.7320508075688772}},"df":4}}},"j":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0}},"df":1},"r":{"docs":{},"df":0,"g":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.4142135623730951}},"df":1}}}},"v":{"docs":{},"df":0,"a":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"b":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.4142135623730951}},"df":1,"’":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0}},"df":2}},"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"y":{"docs":{"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.0}},"df":1}}}}}},"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":1}}},"u":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.4142135623730951}},"df":1},"n":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0}},"df":1}},"w":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1}}},"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":1}},"y":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":2.6457513110645907},"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":2.0},"http://127.0.0.1:1111/redshift-federated-query-with-aurora-mysql/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.7320508075688772}},"df":7}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0}},"df":2}}}}}}},"n":{"docs":{},"df":0,"d":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":2}}},"m":{"docs":{"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":2.0},"http://127.0.0.1:1111/redshift-federated-query-with-aurora-mysql/":{"tf":1.4142135623730951}},"df":2},"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":2,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"g":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0}},"df":2}}}},"n":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":3}}}},"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0}},"df":1,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"s":{"docs":{},"df":0,"/":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"x":{"docs":{},"df":0,"d":{"docs":{},"df":0,"b":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0}},"df":1},"c":{"docs":{},"df":0,"k":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1}},"k":{"docs":{},"df":0,"e":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":2.23606797749979},"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":3.7416573867739413}},"df":3,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.0}},"df":1}}}}}},"m":{"docs":{},"df":0,"b":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":2.449489742783178}},"df":1}}}},"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0},"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":2.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":2.449489742783178}},"df":5}}}}},"r":{"docs":{},"df":0,"g":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0}},"df":1}},"s":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0}},"df":2}}}},"y":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0},"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0}},"df":2}},"v":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0}},"df":1}},"t":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/redshift-federated-query-with-aurora-mysql/":{"tf":1.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.4142135623730951}},"df":3,"’":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":2.0},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":2.6457513110645907},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":2.449489742783178},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.0},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":9}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":3.4641016151377544},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.7320508075688772}},"df":4,"(":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"w":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"k":{"docs":{"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":1}}}}}}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":7}}}}}},"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.4142135623730951}},"df":1}}}}},"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"y":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1}}}}}},"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0}},"df":1}}}}},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":1}}},"n":{"docs":{},"df":0,"e":{"docs":{"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.4142135623730951}},"df":2,"a":{"docs":{},"df":0,"g":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0}},"df":1}}},"k":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":3.1622776601683795},"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":2.449489742783178},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":5,"e":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":1,"s":{"docs":{},"df":0,"/":{"docs":{},"df":0,"t":{"docs":{},"df":0,"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.7320508075688772}},"df":1}}}}}}}}}}}},"s":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.7320508075688772}},"df":6}}},"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":2.6457513110645907},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":2}},"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":2.23606797749979}},"df":4},"t":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":4}},"k":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":2.23606797749979}},"df":1}},"g":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":3,"i":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"k":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.4142135623730951}},"df":2},"p":{"docs":{"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":1}},"w":{"docs":{"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":1}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1}}}},"d":{"docs":{},"df":0,"e":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":2.449489742783178},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":5,".":{"docs":{},"df":0,"g":{"docs":{},"df":0,"o":{"docs":{"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"f":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.0},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0}},"df":4}}},"e":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.0},"http://127.0.0.1:1111/redshift-federated-query-with-aurora-mysql/":{"tf":1.0}},"df":2}}}}},"k":{"docs":{},"df":0,"e":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":2.6457513110645907},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.0},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":6}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":3.4641016151377544},"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":3.0},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/redshift-federated-query-with-aurora-mysql/":{"tf":1.0},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/terraform-stacks/":{"tf":2.23606797749979},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":2.8284271247461903}},"df":10}},"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0}},"df":1}}}}}},"i":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.4142135623730951}},"df":1},"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":2.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":4}},"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0}},"df":1}}}}}}}},"p":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":2.6457513110645907},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.4142135623730951}},"df":4},"r":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0}},"df":1,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.7320508075688772}},"df":1}}}}}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0}},"df":1,"'":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0}},"df":1}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0}},"df":1}}},"u":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":2},"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":2.0},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":2.23606797749979}},"df":3}}}},"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0}},"df":1}}}},"e":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0}},"df":2}},"m":{"docs":{},"df":0,"b":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":2.0},"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":3}}}},"n":{"docs":{},"df":0,"u":{"docs":{"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.0}},"df":2}},"r":{"docs":{},"df":0,"g":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":3}},"t":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":2,"a":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":2.0}},"df":1,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.4142135623730951}},"df":3}}}}},"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"g":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0}},"df":1}}}}}}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1}}}}}},"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":2.449489742783178}},"df":1}}}},"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.7320508075688772}},"df":1}}},"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0}},"df":1}}}}}},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0}},"df":1}}},"o":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":2.23606797749979}},"df":1,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"f":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.4142135623730951}},"df":2}},"u":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":2.8284271247461903},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":4.69041575982343}},"df":5}}},"r":{"docs":{},"df":0,"e":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.0},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":9,"o":{"docs":{},"df":0,"v":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0}},"df":1}}}},"v":{"docs":{},"df":0,"e":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":2.23606797749979},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":4}}},"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":3,"p":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/redshift-federated-query-with-aurora-mysql/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/terraform-stacks/":{"tf":2.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":5}}}}}},"y":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1}}}}}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":4.242640687119285},"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":2.0},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":2.8284271247461903},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":2.6457513110645907},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.0},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":10}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0}},"df":1}}},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":2.6457513110645907},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.4142135623730951}},"df":5}}}},"d":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0}},"df":1},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0}},"df":1}},"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.4142135623730951}},"df":7}}}}}}},"e":{"docs":{},"df":0,"d":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":2.23606797749979},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":2.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":8}},"s":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.7320508075688772}},"df":1}},"t":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1,"w":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"k":{"docs":{"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":2}}}}},"w":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.4142135623730951}},"df":7,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0}},"df":1}}}}},"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0}},"df":1}}}}}}},"x":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":6}}},"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.0}},"df":1,"j":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1}}},"n":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.4142135623730951}},"df":1},"t":{"docs":{},"df":0,"e":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":4,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"k":{"docs":{"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.0}},"df":1}}}}},"i":{"docs":{},"df":0,"f":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0}},"df":1}}},"w":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":2.23606797749979},"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":3.0},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":2.23606797749979},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":2.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":10}},"p":{"docs":{},"df":0,"m":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.4142135623730951}},"df":1}},"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.4142135623730951}},"df":1}}},"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1}}}}},"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":2}}}},"b":{"docs":{},"df":0,"j":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":3}}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0}},"df":1}}}}},"c":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0}},"df":1}}}}}}},"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":5}}}},"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"c":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":2.23606797749979},"http://127.0.0.1:1111/terraform-stacks/":{"tf":2.0}},"df":2}}},"k":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":4.69041575982343}},"df":1}}},"l":{"docs":{},"df":0,"d":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0}},"df":1}}}},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0}},"df":1}}},"n":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.4142135623730951}},"df":6,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.4142135623730951}},"df":1}}}}},"c":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":3.0},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.0},"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/redshift-federated-query-with-aurora-mysql/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.4142135623730951}},"df":6},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0}},"df":1}}}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.4142135623730951}},"df":3,"i":{"docs":{},"df":0,"d":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.4142135623730951}},"df":2}}},"r":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0},"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/redshift-federated-query-with-aurora-mysql/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":7}},"t":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0}},"df":4,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":2.23606797749979},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.0},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0}},"df":6}}}}},"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":3.3166247903554}},"df":1}}}}}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.4142135623730951}},"df":2}}},"g":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":3.0},"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":2.449489742783178},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.4142135623730951}},"df":4,"i":{"docs":{},"df":0,"s":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0}},"df":1},"z":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"’":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.0}},"df":2}}}}}}}}}}}},"u":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.4142135623730951}},"df":2,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"http://127.0.0.1:1111/redshift-federated-query-with-aurora-mysql/":{"tf":1.0}},"df":1}}}}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0}},"df":4}}},"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.7320508075688772}},"df":1}}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":1}}}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.4142135623730951}},"df":2,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"e":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0}},"df":1}},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":2.0}},"df":1}}}}}}},"w":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":2}}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":4.58257569495584},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":3,"e":{"docs":{},"df":0,"’":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.4142135623730951}},"df":1}}}}}},"g":{"docs":{},"df":0,"e":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":2.23606797749979}},"df":3}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":3.1622776601683795}},"df":1}}}},"s":{"docs":{"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0}},"df":1},"t":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":2,"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0}},"df":1}},"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0}},"df":1,"l":{"docs":{},"df":0,"i":{"docs":{"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0}},"df":1}}}}}}}}}},"s":{"docs":{},"df":0,"s":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":2.0}},"df":1,"w":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.0}},"df":1}}}}},"t":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"h":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.4142135623730951}},"df":1}}}}},"u":{"docs":{},"df":0,"s":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/redshift-federated-query-with-aurora-mysql/":{"tf":1.0}},"df":1}},"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.7320508075688772}},"df":1}}}}},"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0}},"df":1}}},"r":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":2}}}},"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":2}}},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":2.0},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":3.872983346207417},"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.7320508075688772}},"df":5,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{},"df":0,"m":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.0}},"df":1}}}}}}}}}}}}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":3}}}}},"f":{"docs":{},"df":0,".":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"(":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"x":{"docs":{},"df":0,"d":{"docs":{},"df":0,"b":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,".":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.4142135623730951}},"df":4}}},"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.4142135623730951}},"df":1}}}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1}}}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.4142135623730951}},"df":1}}}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.0}},"df":4,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1}}}}}},"i":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1}},"n":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0},"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":2.6457513110645907},"http://127.0.0.1:1111/terraform-stacks/":{"tf":2.8284271247461903},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.7320508075688772}},"df":5},"t":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.4142135623730951}},"df":3}}}}}},"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.4142135623730951}},"df":2}}}}},"o":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.4142135623730951}},"df":2}}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":2.449489742783178},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/redshift-federated-query-with-aurora-mysql/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":7}}}},"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"p":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":3.0}},"df":1}}}},"s":{"docs":{},"df":0,"e":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1}}}},"t":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.4142135623730951}},"df":7}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0}},"df":1}}}}},"w":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":3}}}},"r":{"docs":{"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0}},"df":3}}}}},"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0}},"df":1}}},"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1}},"e":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.4142135623730951}},"df":1}}},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.0},"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/redshift-federated-query-with-aurora-mysql/":{"tf":1.0},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.4142135623730951}},"df":8}}}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.4142135623730951}},"df":2}}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.4142135623730951}},"df":2}},"o":{"docs":{},"df":0,"u":{"docs":{"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.0}},"df":3,"s":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0}},"df":2}}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0}},"df":1,"l":{"docs":{"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":2}}}},"t":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0}},"df":1}},"o":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0}},"df":2}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.4142135623730951}},"df":4}},"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0}},"df":1}}}}}},"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.7320508075688772}},"df":6,"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"d":{"docs":{"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0}},"df":1}},"s":{"docs":{},"df":0,"s":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":2.6457513110645907},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":2.0},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.7320508075688772}},"df":6}}}},"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":3.872983346207417}},"df":1,"t":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":2.449489742783178},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":3.4641016151377544},"http://127.0.0.1:1111/terraform-stacks/":{"tf":2.8284271247461903}},"df":3}}}},"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0}},"df":1}}}}}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.4142135623730951}},"df":1}},"l":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":2.23606797749979}},"df":1}}},"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.4142135623730951}},"df":2}}}},"j":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0},"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":4.898979485566356},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":2.449489742783178},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":2.23606797749979}},"df":6}}}},"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0}},"df":1,"l":{"docs":{},"df":0,"i":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0}},"df":2}}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1}},"e":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1,"t":{"docs":{},"df":0,"i":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.4142135623730951}},"df":1}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":2.6457513110645907}},"df":2}}},"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.4142135623730951}},"df":2}}}}},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":2.6457513110645907},"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":3.7416573867739413},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":2.6457513110645907},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":6.782329983125268},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.0},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":2.449489742783178},"http://127.0.0.1:1111/terraform-stacks/":{"tf":4.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":4.242640687119285}},"df":12,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"/":{"docs":{},"df":0,"c":{"docs":{},"df":0,"m":{"docs":{},"df":0,"d":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1,"/":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}},"g":{"docs":{},"df":0,"o":{"docs":{},"df":0,".":{"docs":{},"df":0,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.4142135623730951}},"df":1}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"g":{"docs":{},"df":0,"o":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.7320508075688772}},"df":1}}}}}}}}}}}},"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1}}}}},"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"f":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,".":{"docs":{},"df":0,"h":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}},"s":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":3}}},"x":{"docs":{},"df":0,"i":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.4142135623730951}},"df":1}}}},"u":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":3},"s":{"docs":{},"df":0,"h":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":3.605551275463989},"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":3.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.4142135623730951}},"df":4}}}}},"l":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":2.0},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":2.6457513110645907},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":3},"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":5.477225575051661}},"df":2,".":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"v":{"docs":{},"df":0,".":{"docs":{},"df":0,"y":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1}}}}}}}}},"/":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.4142135623730951}},"df":1}}}}}}}}},"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1}}},"’":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1}}}}},"r":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":5}}}},"s":{"docs":{},"df":0,"h":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.4142135623730951}},"df":1}},"t":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0}},"df":2}},"y":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":2.0}},"df":1}}}}}},"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":2.449489742783178},"http://127.0.0.1:1111/redshift-federated-query-with-aurora-mysql/":{"tf":2.449489742783178},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":3.605551275463989}},"df":5}}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0}},"df":1,"l":{"docs":{},"df":0,"i":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0}},"df":1}}}}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.4142135623730951}},"df":1},"n":{"docs":{},"df":0,"g":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1}}},"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.0},"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.0}},"df":5,"/":{"docs":{},"df":0,"w":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0}},"df":1}}}}},"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":1}}},"i":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0}},"df":2}},"l":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":2}},"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1}}}}},"r":{"docs":{},"df":0,"d":{"docs":{"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":1}}}},"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.0}},"df":1}}}}},"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":4.69041575982343},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":2.8284271247461903},"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/redshift-federated-query-with-aurora-mysql/":{"tf":3.605551275463989},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":3.605551275463989}},"df":5}}}}},"u":{"docs":{},"df":0,"c":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1}}},"f":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":7,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.4142135623730951}},"df":1}}}}},"i":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0}},"df":1}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1}}}}},"g":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1}}}}}}},"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":3.872983346207417},"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/terraform-stacks/":{"tf":3.4641016151377544}},"df":5}},"s":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.0}},"df":1,"r":{"docs":{},"df":0,"i":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":2.23606797749979},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":2.0}},"df":3}}}}},"u":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.0}},"df":1}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0}},"df":1,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":2.0}},"df":1}}}}}}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0}},"df":1}},"v":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0}},"df":1}},"i":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0}},"df":3}}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0},"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0}},"df":2}}},"o":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":1},"v":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.7320508075688772}},"df":1}}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.0}},"df":1}}}}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":2.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.4142135623730951}},"df":2}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":2.0},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.0}},"df":3},"n":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.7320508075688772}},"df":1}},"i":{"docs":{},"df":0,"c":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0}},"df":1}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":2.0},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":2.6457513110645907},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":3.4641016151377544},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.7320508075688772}},"df":4},"y":{"docs":{},"df":0,"’":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0}},"df":1}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1}}}},"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":3.0},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":2.0},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":2.6457513110645907},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":4}}},"i":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0},"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.0},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0},"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":2.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.7320508075688772}},"df":9,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.4142135623730951}},"df":2}}}}}}}}}}}}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.0}},"df":2}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":4.795831523312719},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":3.872983346207417},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":3.605551275463989},"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":2.8284271247461903},"http://127.0.0.1:1111/redshift-federated-query-with-aurora-mysql/":{"tf":2.23606797749979},"http://127.0.0.1:1111/terraform-stacks/":{"tf":3.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":3.872983346207417}},"df":8,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"f":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0}},"df":1}}}}}}}}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.7320508075688772}},"df":3}}}},"t":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.4142135623730951}},"df":1,"o":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":2.0}},"df":1}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.0}},"df":2}}}}},"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.0}},"df":2}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.7320508075688772}},"df":1}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"v":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":4}}}},"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":2}}}},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":2.23606797749979},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.4142135623730951}},"df":5}}},"o":{"docs":{},"df":0,"k":{"docs":{"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.0}},"df":1}}}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":1}},"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.0}},"df":3}}}},"l":{"docs":{},"df":0,"e":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":2.449489742783178},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":3.872983346207417},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":3.4641016151377544},"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":2.0},"http://127.0.0.1:1111/redshift-federated-query-with-aurora-mysql/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":3.3166247903554},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":7,"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1}}}}}},"o":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/redshift-federated-query-with-aurora-mysql/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":2.23606797749979}},"df":4}},"u":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/redshift-federated-query-with-aurora-mysql/":{"tf":1.0}},"df":2}},"w":{"docs":{"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":2.449489742783178}},"df":1}},"p":{"docs":{},"df":0,"c":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1},"o":{"docs":{"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"o":{"docs":{"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.0}},"df":1}},"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":2.8284271247461903},"http://127.0.0.1:1111/redshift-federated-query-with-aurora-mysql/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":3.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":4,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.4142135623730951}},"df":1}}}}},"n":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.7320508075688772}},"df":6,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.4142135623730951}},"df":1}}}}}},"s":{"docs":{},"df":0,"3":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":2.449489742783178},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0},"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/terraform-stacks/":{"tf":2.449489742783178}},"df":4},"a":{"docs":{},"df":0,"a":{"docs":{"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.4142135623730951}},"df":1},"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1}}}}}},"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"k":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0}},"df":1}}}}},"m":{"docs":{},"df":0,"e":{"docs":{"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":2},"l":{"docs":{"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":2.23606797749979},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":2},"p":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.7320508075688772}},"df":1}}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0}},"df":2}}}}},"v":{"docs":{},"df":0,"e":{"docs":{"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.4142135623730951}},"df":1}}},"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":2}}}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0}},"df":1}}}}}},"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":2.0},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/redshift-federated-query-with-aurora-mysql/":{"tf":2.23606797749979}},"df":4}}},"u":{"docs":{},"df":0,"b":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.4142135623730951}},"df":1}}}}}},"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0}},"df":1}}}}}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{},"df":0,"@":{"docs":{},"df":0,"v":{"docs":{},"df":0,"7":{"docs":{"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0}},"df":1}}}}}}}},"d":{"docs":{},"df":0,"k":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":2.0}},"df":1,"/":{"docs":{},"df":0,"g":{"docs":{},"df":0,"o":{"docs":{},"df":0,".":{"docs":{},"df":0,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1}}}}}}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.4142135623730951}},"df":6,"l":{"docs":{},"df":0,"i":{"docs":{"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0}},"df":3}}}}}}},"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":2.0}},"df":1}}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.0}},"df":3}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":2.0},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":2.0},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/redshift-federated-query-with-aurora-mysql/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.4142135623730951}},"df":6,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"http://127.0.0.1:1111/redshift-federated-query-with-aurora-mysql/":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"http://127.0.0.1:1111/redshift-federated-query-with-aurora-mysql/":{"tf":1.0}},"df":1}}}}}}}}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":5}}}},"u":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":2.0},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":3.0},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.0},"http://127.0.0.1:1111/redshift-federated-query-with-aurora-mysql/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.4142135623730951}},"df":8}}},"e":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":2.0},"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.0}},"df":2,"m":{"docs":{"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.0}},"df":1}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":3.4641016151377544},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":3.3166247903554},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.0},"http://127.0.0.1:1111/redshift-federated-query-with-aurora-mysql/":{"tf":1.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":8}}},"f":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":2}},"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0}},"df":1}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1}}},"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0}},"df":1}}}}}},"r":{"docs":{},"df":0,"i":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0}},"df":2},"v":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.0}},"df":2,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.7320508075688772}},"df":1,"/":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"/":{"docs":{},"df":0,"s":{"docs":{},"df":0,"y":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"x":{"docs":{},"df":0,"/":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"df":0,"c":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":2.6457513110645907},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":2.23606797749979},"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.4142135623730951}},"df":5}}}},"t":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":4.69041575982343},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":3.0},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":2.23606797749979},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":2.6457513110645907},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":2.23606797749979},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":2.23606797749979},"http://127.0.0.1:1111/terraform-stacks/":{"tf":2.0}},"df":7,"u":{"docs":{},"df":0,"p":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":2.449489742783178},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":2.6457513110645907},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":2.23606797749979},"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":2.449489742783178},"http://127.0.0.1:1111/redshift-federated-query-with-aurora-mysql/":{"tf":2.23606797749979},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.7320508075688772}},"df":8}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1}}}},"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":2.23606797749979},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":4.58257569495584},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":2.6457513110645907},"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":2.8284271247461903},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":6}}},"i":{"docs":{},"df":0,"m":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":2.6457513110645907}},"df":1,".":{"docs":{},"df":0,"g":{"docs":{},"df":0,"o":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1}}},"v":{"docs":{},"df":0,"2":{"docs":{},"df":0,".":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"(":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"x":{"docs":{},"df":0,"d":{"docs":{},"df":0,"b":{"docs":{},"df":0,".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0}},"df":1}},"w":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.0},"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.0}},"df":3,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0}},"df":1}}},"n":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1}}}},"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.4142135623730951}},"df":1,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.4142135623730951}},"df":1}}}}},"g":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1}}}}}},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1,"l":{"docs":{},"df":0,"i":{"docs":{"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.4142135623730951}},"df":1}}}}}},"p":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.0},"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.0}},"df":3,"i":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":2,"f":{"docs":{},"df":0,"i":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.4142135623730951}},"df":2}}}}}},"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.7320508075688772}},"df":2}}},"t":{"docs":{},"df":0,"e":{"docs":{"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":2.0}},"df":1}}},"k":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":2.449489742783178}},"df":1}}}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.7320508075688772}},"df":1}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0}},"df":2,"l":{"docs":{},"df":0,"i":{"docs":{"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.0}},"df":1}}}}}}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":5.291502622129181}},"df":1}}}}}},"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.4142135623730951}},"df":1}}}}}},"o":{"docs":{},"df":0,"f":{"docs":{},"df":0,"t":{"docs":{},"df":0,"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.4142135623730951}},"df":1}}}}},"l":{"docs":{},"df":0,"e":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":2},"u":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.4142135623730951}},"df":2}}},"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0},"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":2.6457513110645907},"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":2.6457513110645907},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":2.6457513110645907},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":2.0},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.0},"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":2.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":2.23606797749979}},"df":10,"e":{"docs":{},"df":0,"’":{"docs":{"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.0}},"df":1}}}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":2}}},"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.7320508075688772}},"df":1}},"f":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":2.449489742783178},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":7,"i":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.7320508075688772}},"df":4}}},"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.4142135623730951}},"df":1}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0}},"df":1}}}}},"q":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.4142135623730951}},"df":1}},"s":{"docs":{},"df":0,"i":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.4142135623730951}},"df":1},"o":{"docs":{"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.4142135623730951}},"df":1},"r":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.4142135623730951}},"df":1}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/terraform-stacks/":{"tf":5.916079783099616}},"df":2}},"g":{"docs":{},"df":0,"e":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":2}},"m":{"docs":{},"df":0,"p":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0}},"df":1}},"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.7320508075688772}},"df":6}}}}},"r":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.0},"http://127.0.0.1:1111/redshift-federated-query-with-aurora-mysql/":{"tf":1.0},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":8}},"t":{"docs":{},"df":0,"e":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":2.6457513110645907}},"df":2},"i":{"docs":{},"df":0,"c":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1}},"u":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.4142135623730951}},"df":1}}},"e":{"docs":{},"df":0,"p":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":2.8284271247461903},"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":2.0},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":4.898979485566356},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":4.123105625617661},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":2.6457513110645907},"http://127.0.0.1:1111/redshift-federated-query-with-aurora-mysql/":{"tf":1.7320508075688772}},"df":9},"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0}},"df":1}}}}},"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":2}},"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":3}},"e":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":2.0},"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/redshift-federated-query-with-aurora-mysql/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":2.449489742783178},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.4142135623730951}},"df":5}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.7320508075688772}},"df":1}}}}}}}}}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":6}}}}}},"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":3.3166247903554}},"df":1,"u":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":5}}}}}},"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"z":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"w":{"docs":{},"df":0,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}},"u":{"docs":{},"df":0,"b":{"docs":{"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0}},"df":1,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":3.1622776601683795}},"df":1},"p":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":3.1622776601683795}},"df":1}}}}},"e":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":3}}}}},"c":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1,"s":{"docs":{},"df":0,"s":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.4142135623730951}},"df":1,"f":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":3}}}}}}}}},"h":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":2.0},"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.4142135623730951}},"df":7}},"i":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0}},"df":2}}}}},"p":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0},"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/redshift-federated-query-with-aurora-mysql/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":7}},"s":{"docs":{"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"e":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.0}},"df":3}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0}},"df":1}}}}}},"w":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0}},"df":1}}}}},"y":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.4142135623730951}},"df":1}}}}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":2.6457513110645907},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.7320508075688772}},"df":2,"l":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":3.3166247903554},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.0},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0},"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":2.449489742783178},"http://127.0.0.1:1111/redshift-federated-query-with-aurora-mysql/":{"tf":1.0},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":13}},"g":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":4},"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0}},"df":1}}}},"k":{"docs":{},"df":0,"e":{"docs":{"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":2,"n":{"docs":{"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0}},"df":1}}},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":4.242640687119285},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":2.23606797749979},"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":2.6457513110645907}},"df":4,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":2.0}},"df":1}}}}}}}}}}},"s":{"docs":{},"df":0,"k":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.4142135623730951}},"df":3}},"x":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0}},"df":1}}}}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.0},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.0}},"df":5}},"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.4142135623730951}},"df":2},"q":{"docs":{},"df":0,"u":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"g":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":2.0}},"df":1}}}}}}},"m":{"docs":{},"df":0,"p":{"docs":{"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.0}},"df":1,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":2.6457513110645907}},"df":1}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":1}}}}}}},"r":{"docs":{},"df":0,"m":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":2.449489742783178},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":2},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":3.605551275463989},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":5.196152422706632},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":2.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":3.872983346207417},"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/terraform-stacks/":{"tf":4.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":6.48074069840786}},"df":9,".":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,".":{"docs":{},"df":0,"h":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.4142135623730951}},"df":1}}}}}}}}},"@":{"docs":{},"df":0,"v":{"docs":{},"df":0,"3":{"docs":{"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.4142135623730951}},"df":1}}},"’":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1}}}}}}}},"s":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":2.23606797749979},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":4}},"x":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.4142135623730951}},"df":1}}},"f":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":2,"b":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"y":{"docs":{},"df":0,".":{"docs":{},"df":0,"h":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}},"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.4142135623730951}},"df":1}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1,".":{"docs":{},"df":0,"h":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.7320508075688772}},"df":1}}}}}}}}}},"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0}},"df":1}}},"’":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0}},"df":1}}},"y":{"docs":{},"df":0,"'":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.4142135623730951}},"df":1}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0}},"df":2,"l":{"docs":{},"df":0,"i":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1}}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.4142135623730951}},"df":3}},"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1,"t":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.4142135623730951}},"df":1}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"e":{"docs":{"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":2.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":3}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":2.0},"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":9,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.0}},"df":2}}}}}}}},"u":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0}},"df":1,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"j":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0}},"df":1}}}}}}}}},"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0},"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":2.449489742783178},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.4142135623730951}},"df":7,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0}},"df":1}}}}}}},"t":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":2}}}},"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":2.449489742783178},"http://127.0.0.1:1111/terraform-stacks/":{"tf":2.0}},"df":4}}},"o":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":2.0},"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.7320508075688772}},"df":5,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":1}}}}}}},"p":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":1}},"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":2}}},"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"http://127.0.0.1:1111/redshift-federated-query-with-aurora-mysql/":{"tf":1.0}},"df":1}}}},"i":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0}},"df":1}},"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1}}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1}},"g":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":2.0},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":4}}}}},"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":2.0},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":2.0}},"df":2}}}},"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.7320508075688772}},"df":2}}}}},"w":{"docs":{},"df":0,"o":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.4142135623730951}},"df":7}},"y":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":6,"s":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1}}}}}}},"i":{"docs":{},"df":0,"c":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":3}}}}},"u":{"docs":{},"df":0,"i":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":2},"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0}},"df":1}}}},"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1}}}}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":2.0},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.4142135623730951}},"df":4,"g":{"docs":{},"df":0,"o":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0}},"df":1}},"l":{"docs":{},"df":0,"i":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.0}},"df":2}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":2.23606797749979},"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":4}}}}}}}},"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1}},"q":{"docs":{},"df":0,"u":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1}},"t":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0}},"df":1}}}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0}},"df":1}}}},"p":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":2.8284271247461903},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":2.8284271247461903},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":2.23606797749979},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":2.23606797749979},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":2.23606797749979},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":2.23606797749979},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.4142135623730951}},"df":7,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":4}}},"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.4142135623730951}},"df":2}},"s":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0},"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":4.58257569495584},"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":2.23606797749979},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":2.449489742783178},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":2.23606797749979},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":2.23606797749979},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.0},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":2.0},"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":3.1622776601683795},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":2.6457513110645907},"http://127.0.0.1:1111/terraform-stacks/":{"tf":3.872983346207417},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":3.4641016151377544}},"df":13,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":3.0},"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/redshift-federated-query-with-aurora-mysql/":{"tf":1.0},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":2.23606797749979},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":7,"(":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/redshift-federated-query-with-aurora-mysql/":{"tf":1.4142135623730951}},"df":1}}}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.4142135623730951}},"df":1,"e":{"docs":{},"df":0,"/":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0},"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":2.449489742783178},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":2.0},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":2.0},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":8}}}},"v":{"docs":{},"df":0,"0":{"docs":{},"df":0,".":{"docs":{},"df":0,"0":{"docs":{},"df":0,".":{"docs":{},"df":0,"0":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1}}}}},"2":{"docs":{"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":3.1622776601683795}},"df":1},"3":{"docs":{"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":3.0}},"df":1},"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.4142135623730951}},"df":2}},"u":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.7320508075688772}},"df":4,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1}}}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":2.449489742783178},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":2.23606797749979},"http://127.0.0.1:1111/terraform-stacks/":{"tf":2.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":2.449489742783178}},"df":8,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"f":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,".":{"docs":{},"df":0,"h":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}},"o":{"docs":{},"df":0,"u":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":2.0},"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0}},"df":3}}}}},"c":{"docs":{"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.4142135623730951}},"df":1},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0},"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0}},"df":3}}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/redshift-federated-query-with-aurora-mysql/":{"tf":1.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":3,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"f":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0}},"df":1}}}}}}}}}},"i":{"docs":{},"df":0,"a":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.0}},"df":2},"b":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1}}}}},"d":{"docs":{},"df":0,"y":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0}},"df":1}}}}}}}}}},"e":{"docs":{},"df":0,"w":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":2.0},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":6}},"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.4142135623730951}},"df":1}}}}},"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"w":{"docs":{},"df":0,"a":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0}},"df":1}}},"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":2.0},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.0}},"df":2}}}}},"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0}},"df":1}}}}}}}},"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0}},"df":1}}}},"p":{"docs":{},"df":0,"c":{"docs":{"http://127.0.0.1:1111/redshift-federated-query-with-aurora-mysql/":{"tf":1.4142135623730951}},"df":1}}},"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0}},"df":1}},"l":{"docs":{},"df":0,"k":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":2}},"n":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":2}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":2.0}},"df":1}}}}}},"y":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":3}},"e":{"docs":{},"df":0,"'":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.4142135623730951}},"df":1}}},"b":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.0}},"df":3},"l":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0},"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0}},"df":2}},"s":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1}},"’":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":2.0},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":3.0},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":2.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.4142135623730951}},"df":8}},"v":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":2.0},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.0},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.4142135623730951}},"df":7}}},"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"v":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.4142135623730951}},"df":1}}},"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0}},"df":1}}}}}},"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":1}},"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.0}},"df":2}}}},"s":{"docs":{},"df":0,"h":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":2.23606797749979},"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":2.0},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":2.23606797749979}},"df":9}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":2}}}}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"k":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0},"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":2.0}},"df":5,"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.7320508075688772},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":2.8284271247461903},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":4}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":1.0}},"df":1}}}},"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"p":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.4142135623730951}},"df":1}}}}},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.4142135623730951}},"df":1}}}},"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":3.1622776601683795},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.7320508075688772}},"df":4}}}}},"l":{"docs":{},"df":0,"d":{"docs":{"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.7320508075688772}},"df":1}}}}},"p":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.4142135623730951}},"df":2}},"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.0},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":4.123105625617661},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.4142135623730951}},"df":6},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0}},"df":1}}}}}}},"x":{"docs":{"http://127.0.0.1:1111/redshift-federated-query-with-aurora-mysql/":{"tf":1.0}},"df":1,"y":{"docs":{},"df":0,"z":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1}},"’":{"docs":{"http://127.0.0.1:1111/redshift-federated-query-with-aurora-mysql/":{"tf":1.4142135623730951}},"df":1}},"y":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1}}}}},"’":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.4142135623730951},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":2}},"r":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.0},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0}},"df":4},"v":{"docs":{"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.7320508075688772}},"df":1}}}},"r":{"docs":{"http://127.0.0.1:1111/about-me/":{"tf":2.0}},"df":1}},"z":{"docs":{"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":1}}},"description":{"root":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.0}},"df":3}}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.0},"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.0}},"df":3}}}}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0}},"df":1}}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"z":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.0}},"df":1}}}}},"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"(":{"docs":{},"df":0,"m":{"docs":{},"df":0,"y":{"docs":{},"df":0,"s":{"docs":{},"df":0,"q":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/redshift-federated-query-with-aurora-mysql/":{"tf":1.0}},"df":1}}}}}}}}}},"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0}},"df":1}}}},"w":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.0}},"df":4}},"b":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"g":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1}}}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0}},"df":1}}}}}}},"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"u":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0}},"df":1}}}}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.0}},"df":2}}}}},"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0}},"df":3,"z":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0}},"df":1}}}}}},"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"y":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0}},"df":3}}}}},"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.0}},"df":1}}}}}},"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.0}},"df":1}}}}},"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0}},"df":1}}}}}}}}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0}},"df":1}}},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0}},"df":1}}}}}}},"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/redshift-federated-query-with-aurora-mysql/":{"tf":1.0}},"df":1}}}},"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0}},"df":1}}}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.0}},"df":2}}}}}},"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"u":{"docs":{},"df":0,"b":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0}},"df":2}}}}},"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0}},"df":1}}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0}},"df":1}}}}}},"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"p":{"docs":{"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":1}}}}}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"x":{"docs":{},"df":0,"d":{"docs":{},"df":0,"b":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0}},"df":2}}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0}},"df":1}}}}}}}}}}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.0}},"df":2}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0}},"df":1}}}}},"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.0}},"df":1}}}}}},"o":{"docs":{},"df":0,"k":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.0}},"df":1}}}},"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1}}}}},"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1}}}}}},"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"http://127.0.0.1:1111/redshift-federated-query-with-aurora-mysql/":{"tf":1.0},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.0}},"df":2}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.0},"http://127.0.0.1:1111/redshift-federated-query-with-aurora-mysql/":{"tf":1.0},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.0}},"df":3}}}}}},"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0}},"df":1}}}}}}},"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"o":{"docs":{"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.0}},"df":1}}}}}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":8}}}}}}}}},"u":{"docs":{},"df":0,"s":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.0}},"df":3}},"v":{"docs":{},"df":0,"3":{"docs":{"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0}},"df":1}},"w":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0}},"df":1}}}}}}},"title":{"root":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.0}},"df":3}}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.0},"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.0}},"df":3}}}}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0}},"df":1}}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"z":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.0}},"df":1}}}}},"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"(":{"docs":{},"df":0,"m":{"docs":{},"df":0,"y":{"docs":{},"df":0,"s":{"docs":{},"df":0,"q":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/redshift-federated-query-with-aurora-mysql/":{"tf":1.0}},"df":1}}}}}}}}}},"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0}},"df":1}}}},"w":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.0}},"df":4}},"b":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"g":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1}}}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0}},"df":1}}}}}}},"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"u":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0}},"df":1}}}}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.0}},"df":2}}}}},"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0}},"df":3,"z":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0}},"df":1}}}}}},"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"y":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0}},"df":3}}}}},"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.0}},"df":1}}}}}},"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.0}},"df":1}}}}},"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0}},"df":1}}}}}}}}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0}},"df":1}}},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0}},"df":1}}}}}}},"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/redshift-federated-query-with-aurora-mysql/":{"tf":1.0}},"df":1}}}},"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0}},"df":1}}}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.0}},"df":2}}}}}},"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"u":{"docs":{},"df":0,"b":{"docs":{"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"tf":1.0},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0}},"df":2}}}}},"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0}},"df":1}}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0}},"df":1}}}}}},"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"p":{"docs":{"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":1}}}}}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"x":{"docs":{},"df":0,"d":{"docs":{},"df":0,"b":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0}},"df":2}}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0}},"df":1}}}}}}}}}}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.0}},"df":2}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0}},"df":1}}}}},"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.0}},"df":1}}}}}},"o":{"docs":{},"df":0,"k":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.0}},"df":1}}}},"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1}}}}},"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0}},"df":1}}}}}},"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"http://127.0.0.1:1111/redshift-federated-query-with-aurora-mysql/":{"tf":1.0},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.0}},"df":2}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"t":{"docs":{"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.0},"http://127.0.0.1:1111/redshift-federated-query-with-aurora-mysql/":{"tf":1.0},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.0}},"df":3}}}}}},"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0}},"df":1}}}}}}},"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"o":{"docs":{"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.0}},"df":1}}}}}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"tf":1.0},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"tf":1.0},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"tf":1.0},"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"tf":1.0},"http://127.0.0.1:1111/terraform-stacks/":{"tf":1.0},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"tf":1.0}},"df":8}}}}}}}}},"u":{"docs":{},"df":0,"s":{"docs":{"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"tf":1.0},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"tf":1.0},"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"tf":1.0}},"df":3}},"v":{"docs":{},"df":0,"3":{"docs":{"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0}},"df":1}},"w":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"tf":1.0}},"df":1}}}}}}}},"documentStore":{"save":true,"docs":{"http://127.0.0.1:1111/":{"body":"","description":"","id":"http://127.0.0.1:1111/","title":""},"http://127.0.0.1:1111/about-me/":{"body":"Hi there 👋, I'm Thulasiraj\n\n\n\n\nAbout me\n\n🧑‍💻 Data Platform Engineer at Schuberg Philis\n💻 AWS Community Builder\n🚀 Occasionally building Terraform &amp; Pulumi providers at Komminar Labs\n\nExperience\nMission Critical Engineer - Schuberg Philis - Amsterdam\nAug 2019 - Present · 5 yrs 3 mos\nHelping HEINEKEN in becoming the best Connected Brewer by elevating standards in sustainability and responsibility, while unleashing the untapped potential of its workforce.\nSkills: Smart Manufacturing · Industry 4.0 · Industrial Internet of Things (IIoT) · Amazon Web Services (AWS) · Terraform · Internet of Things (IoT) · MLOps · AWS SageMaker\nData Platform Engineer | AWS - HCL Technologies - The Hague\nJul 2016 to Jul 2019 · 3 yrs 1 mo\nTo provide a near real time data integration both for online as well as for analytical purposes by using CDC approach to build a DataLake for integrating all the data sources.\nSkills: Amazon Web Services (AWS)\nInformatica &amp; Pentaho Developer - HCL Technologies - The Hague\nMar 2015 - Jun 2016 · 1 yr 4 mos\nUtilize business intelligence expertise, business knowledge and technical skills to successfully deliver Business Intelligence solutions on Informatica &amp; Pentaho BI Platform.\nSkills: Amazon Web Services (AWS) · Pentaho · Informatica\nInformatica Developer - HCL Technologies - Chennai\nFeb 2014 - Feb 2015 · 1 yr 1 mos\nResponsible for learning, applying, and refining established ETL development standards.\nRequired to develop ETLs on assigned projects including reviewing technical documentation and conducting design reviews.\nDeveloping test plans so that the developed ETLs can be verified to ensure its applicability and smooth operation.\nInvolving in testing and deploying the ETL modules., to ensure that the clients remain satisfied.\nSkills: Informatica\nSSIS &amp; SSRS Developer - HCL Technologies - Chennai\nAug 2013 - Jan 2014 · 6 mos\nSkills: SSIS · SSRS\nEducation\nMaster's Degree, Computer Applications - Amrita Vishwa Vidyapeetham\n2009 - 2012\nLanguages\n\n\nEnglish: Professional working proficiency\n\n\nTamil: Native or bilingual proficiency\n\n\n","description":"","id":"http://127.0.0.1:1111/about-me/","title":"About me"},"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"body":"In this blog, we will provide a brief introduction to data governance and show how to implement it on AWS using DataZone. We will walk through a practical example involving a multi-account setup to manage and share data stored in S3 and Redshift, highlighting key steps and best practices along the way.\n\nTable of Contents\n\n\nWhat is Data Governance?\n\nData mapping and classification.\nBusiness glossary.\nData catalog.\n\n\nWhat is AWS DataZone?\n\nKey concepts and Capabilities\n\nData Portal\nBusiness Data Catalog\nData Projects and Environments\nGovernance and Access Control\n\n\n\n\nSetting up DataZone\n\nArchitecture\nDataZone Account\nCreate DataZone Domain\nAssociate Producer and Consumer accounts\nCreate Projects\nCreate Environments\n\nAthena Environment\nRedshift Environment\n\n\nProducer and Consumer Account\n\nEnable Blueprints\nCreate Parameter Set for Redshift\n\n\n\n\nPublishing and Cataloging data product\n\nPublish Claims data\nPublish Customer data\n\n\nDiscovering and subscribing data product\n\nClaims data\n\nCreate subscription\nAnalyze and Visualize data in Athena\n\n\nCustomer data\n\nCreate subscription\nAnalyze and Visualize data in Redshift\n\n\n\n\nConclusion\n\n\n\n\nWhat is Data Governance?\nData governance is everything you do to ensure data is secure, private, accurate, available, and usable which helps organizations accelerate data-driven decisions. Key steps in implementing data governance typically include:\nData mapping and classification.\nData mapping involves documenting data assets and understanding how data flows through an organization’s systems. This process enables the identification of different data sets, which can then be classified based on various factors, such as whether they contain personal information or other sensitive data. These classifications directly influence the application of data governance policies to each data set, ensuring appropriate levels of security and compliance.\nBusiness glossary.\nA business glossary provides standardized definitions for business terms and concepts used within an organization. For instance, it might define what constitutes an active customer. By establishing a common vocabulary for business data, a business glossary supports consistent understanding and interpretation, which is crucial for effective governance across the organization.\nData catalog.\nA data catalog is a comprehensive, indexed inventory of an organization’s data assets, created by collecting metadata from various systems. It typically includes details on data lineage, search functionalities, and collaboration tools. Data catalogs often integrate information about data governance policies and offer automated mechanisms for policy enforcement, ensuring that data is used in accordance with established governance standards.\nWhat is AWS DataZone?\nDataZone is a data management service that makes it faster and easier for customers to catalog, discover, share, and govern data stored across AWS accounts. With DataZone, administrators and data stewards who oversee an organization’s data assets can manage and govern access to data using fine-grained controls. These controls are designed to ensure access with the right level of privileges and context. DataZone makes it easier for engineers, data scientists, product managers, analysts, and business users to access data throughout an organization so that they can discover, use, and collaborate to derive data-driven insights.\nKey concepts and Capabilities\nData Portal\nThis is a web application where different users can go to catalog, discover, govern, share, and analyze data in a self-service fashion.\nBusiness Data Catalog\nIn your catalog, you can define the taxonomy or the business glossary. You can use this component to catalog data across your organization with business context and thus enable everyone in your organization to ﬁnd and understand data quickly.\nData Projects and Environments\nYou can use projects to simplify access to the AWS analytics by creating business use case–based groupings of people, data assets, and analytics tools. DataZone projects provide a space where project members can collaborate, exchange data, and share data assets. Within projects, you can create environments that provide the necessary infrastructure to project members such as analytics tools and storage so that project members can easily produce new data or consume data they have access to.\nGovernance and Access Control\nYou can use built-in workflows that allow users across the organization to request access to data in the catalog and owners of the data to review and approve those subscription requests. Once a subscription request is approved, DataZone can automatically grant access by managing permission at underlying data stores such as Lake Formation and Redshift.\nSetting up DataZone\n\nPrerequisites\nSet up Redshift Serverless clusters in both the Producer and Consumer accounts. This is essential for enabling database sharing across accounts.\n\nNow that we’ve explored the fundamentals of data governance and the key concepts of DataZone, let’s move forward with the setup process.\nArchitecture\n\n\n\n\nDataZone Account\nIn an organization, a central Data Team is typically responsible for setting up and managing the data marketplace using DataZone. Their key responsibilities include:\n\nBuilding Security Controls: Implementing robust security measures to protect data assets.\nDeveloping and Operating the Platform: Ensuring the data marketplace is built and maintained for seamless operation.\nSimplifying Onboarding: Facilitating the onboarding process by creating training materials and actively engaging with the community.\n\nTo begin setting up a Data Marketplace, the first step is to create a domain.\nCreate DataZone Domain\n\nLogin to the AWS Console as an administrator user, then navigate to Amazon DataZone.\nClick on the Create domain button.\n\n\n\n\n\n\nOn the Create domain page, provide values for the following fields:\n\nDomain Name: The name of the domain.\nDescription: This is an optional field where you can provide a description for this root domain.\nService access: DataZone will create a new service role for you if there is no suitable role exists in your AWS account. This role includes necessary permissions that authorize DataZone to make API calls on behalf of users within the domain.\n\n\n\n\n\n\n\n\nQuick set up: Select this option as it automatically creates required service roles and S3 bucket required for DataZone.\n\n\n\n\n\n\nClick on Create domain. Once the domain is created click Open data portal.\n\nAssociate Producer and Consumer accounts\nAssociating your AWS accounts with DataZone domains enables you to publish data from these AWS accounts into the DataZone catalog and create DataZone projects to work with your data across multiple AWS accounts. Now the Data Portal is ready lets associate the producer and the consumer accounts.\n\nGo to the domains, click on the Account associations and click Request association\nEnter the Producer account id and click Request association. Repeat this step to associate the Consumer account.\n\n\n\n\n\nCreate Projects\nProjects enable a group of users to collaborate on various business use cases that involve publishing, discovering, subscribing to, and consuming data assets in the Amazon DataZone catalog. We will create projects for producer and consumer.\n\nLog in to the Data Portal and navigate to the Create Project option. Enter a name for your project and click Create. Repeat this process to create the Consumer project as well.\n\n\n\n\n\nWith the projects set up and the Producer and Consumer accounts linked, the next step is to enable blueprints in both the Producer and Consumer accounts. Once this is done, we’ll return to the DataZone account to create environments, establish a business catalog, and then publish and subscribe to data assets.\nCreate Environments\nIn DataZone projects, environments are defined as collections of configured resources — such as S3 buckets, Glue databases, or Athena workgroups — each associated with a specific set of IAM principals (user roles) who are granted owner or contributor permissions to manage those resources.\nIn our setup, we will create two environments: one for Athena (linked with S3) and another for Redshift.\nAthena Environment\n\nLog in to the Data Portal, select the Producer project, and then navigate to the Environments tab. Click on Create Environment to proceed.\n\n\n\n\n\n\nEnter the name and choose DataLakeProfile as environment profile and click Create Environment.\nEnter a name for the environment, select DataLakeProfile as the environment profile, and click Create Environment.\n\n\n\n\n\nRedshift Environment\n\nNavigate to the Environments tab and click Create Environment Profile. Enter a name for the profile and select Default Data Warehouse as the blueprint.\n\n\n\n\n\n\nUnder the Parameter set section, select the parameter set you created earlier.\n\n\n\n\n\n\nClick Create Environment Profile to complete the setup.\n\n\n\n\n\nProducer and Consumer Account\nEnable Blueprints\nA blueprint with which the environment is created defines what AWS tools and services (eg, Glue or Redshift) members of the project to which the environment belongs can use as they work with assets in the DataZone catalog.\nGo to DataZone service click View Associated Domain and under the Blueprints tab enable Default Data Lake and Default Data Warehouse blueprints.\nCreate Parameter Set for Redshift\nParameter set is a group of keys and values, required for DataZone to establish a connection to your Redshift cluster and is used to create data warehouse environments. These parameters include the name of your Redshift cluster, database, and the secrets manager that holds credentials to the cluster.\n\nClick on the Default Data Warehouse blueprints and under the Parameter sets click Create parameter set. Enter the name, description and choose the region.\n\n\n\n\n\n\nSelect either Amazon Redshift cluster or Amazon Redshift Serverless.\nSelect the secrets manager ARN that holds the credentials to the selected Redshift cluster or the Redshift Serverless workgroup. - - The AWS secret must be tagged with the AmazonDataZoneDomain : [Domain_ID] tag in order to be eligible for use within a parameter set.\nClick Create parameter set.\n\n\nMake sure the Redshift Manage Access Role has permissions to read the secret.\n\n\n\n\n\nRepeat the above steps in the Consumer account to mirror the setup.\nPublishing and Cataloging data product\n\nPrerequisites\nFor this tutorial create two datasets in the Producer account.\nClaims: Create a dataset in S3 that contains information on insurance claims filed. Additionally, use the Glue Data Catalog to catalog this data.\nCustomer: Create a dataset in Redshift that includes personal information and relevant details about customers.\n\nWith the projects and environments now created, we can proceed to import existing data, catalog it, and ultimately publish it and then will make the data easy to understand with business glossary and business name generation.\nPublish Claims data\n\nLog in to the Data Portal, navigate to the Data Sources tab, and click on Create Data Source.\nEnter a name for the data source, select AWS Glue as the type (since the claims data is stored in S3), and choose the environment you just created.\n\n\n\n\n\n\nEnter the name of the Glue database, then proceed through the subsequent tabs with the default settings. Click Create to finalize the setup.\n\n\n\n\n\n\nOnce the Data Source is created, initiate it to allow DataZone to import the Glue catalog into the Data Portal. After the process completes, you will see the imported asset in the portal.\n\n\n\n\n\n\n\nClick on the asset to verify its details. The tables created have technical column names. DataZone provides a feature called Business Name Generation, which converts technical names into more user-friendly business data names. Review these generated names, and if they meet your expectations, click Accept All to apply the business data names automatically.\n\n\nBusiness Glossary: In DataZone, a business glossary is a curated collection of business terms designed to enhance the clarity and understanding of data assets. These glossaries are created within the catalog’s root domain and can be linked to metadata forms across various domains. A business glossary can either be a flat list of terms or a hierarchical structure, where any term can have an associated sublist of related terms. This feature ensures that data is easier to interpret and aligns with business concepts.\n\n\nIf needed, you can create and attach Business Glossary terms to the data asset. Once everything is in place, click Publish Asset to make the data asset available for consumption.\n\n\n\n\n\n\nPublish Customer data\n\nNavigate to the Data Sources tab, create a new data source and choose Amazon Redshift as the type.\n\n\n\n\n\n\nClick Next, enter the appropriate schema name, and leave the remaining settings as default. Click Create and then run the data source. Once the run is complete, you should see the imported asset. Click on the asset and then select Publish to finalize the process.\n\n\n\n\n\nHaving published both datasets, the next step is to subscribe from the Consumer account. Once subscribed, you can analyze the data using Athena and Redshift.\nDiscovering and subscribing data product\nData Consumer searches for data and discovers the data needed for the business use case. They also request access to the data through data subscription. Once the Data Product Owner approves the subscription, the data asset is available for use by the Data Analyst.\nClaims data\nCreate subscription\n\nUse the search bar to locate the claims data and click Subscribe.\n\n\n\n\n\n\nNavigate to the Producer project, where a notification for the subscription request should appear. Click View Request to review the details and approve it. You can choose to grant full access to the data or apply column/row filters as needed.\n\n\n\n\n\n\n\n\n\nAnalyze and Visualize data in Athena\n\nReturn to the Consumer project, where you should now see the subscribed asset listed.\n\n\n\n\n\n\nClick on the subscribed asset, then go to the My Subscription tab and select Query Data to view the data.\n\n\n\n\n\n\n\n\n\nCustomer data\nCreate subscription\n\nRepeat the process to search for and subscribe to the customer data. Switch back to the Producer project to approve the request. Once approved, DataZone will add the asset to the existing environment.\n\n\n\n\n\nAnalyze and Visualize data in Redshift\n\nClick Query Data to run queries on the Customer data in Redshift.\n\n\n\n\n\n\nFor authentication, select Federated User and use dev for the database. You should see a datazone_* schema with a view created under that schema.\n\n\n\n\n\nConclusion\nThis blog covered setting up data governance with AWS DataZone, including creating datasets, configuring environments, and managing data access. With these steps, you can now efficiently manage and analyze data across your organization, enhancing data-driven decision-making.\n","description":"","id":"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/","title":"Data Governance on AWS using DataZone"},"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"body":"Terraform is a powerful infrastructure as code tool that automates cloud infrastructure provisioning and management through simple configuration files. If you’re interested in learning more, I’ve written a short blog outlining some key components of Terraform.\n\nInfluxDB is a specialized time-series database tailored for efficiently handling large volumes of time-stamped data. In this blog, we’ll explore how to leverage Terraform for provisioning and managing resources within InfluxDB.\n\n\n\n\n\nTable of Contents\n\n\nProvider Configuration\nCreating and Managing InfluxDB Resources\n\nData Sources:\nResources:\nResources\n\nOrganization\nBucket\nAuthorization\n\n\nData Sources\n\n\nAdditional Resources\nConclusion\n\n\n\n\n\nPrerequisites\nTo install Terraform, you can easily follow the steps outlined in this blog post: Install Terraform.\nBefore diving in, ensure you have a basic understanding of InfluxDB and its components. For installation guidance, refer to this resource: Install InfluxDB.\n\nProvider Configuration\nTo create and manage InfluxDB resources using Terraform, it utilizes specialized plugins known as providers to interface with InfluxDB. I’ve developed and published a provider for InfluxDB on the Terraform registry, enabling seamless resource creation and management.\nLet’s begin by configuring the provider.\n\nCreate a file named versions.tf and insert the following code to declare the InfluxDB provider. This allows Terraform to install and utilize the provider. Provider dependencies are specified within a required_providers block.\n\n\n\nCreate another file named main.tf to initialize the InfluxDB provider. We’ll use a provider block to configure it. You can specify the provider configuration using arguments such as url and token, or alternatively, utilize environment variables like INFLUXDB_TOKEN and INFLUXDB_URL.\n\n\n\nCreating and Managing InfluxDB Resources\nThe komminarlabs/influxdb provider offers various data sources and resources.\nData Sources:\n\ninfluxdb_authorization\ninfluxdb_authorizations\ninfluxdb_bucket\ninfluxdb_buckets\ninfluxdb_organization\ninfluxdb_organizations\n\nResources:\n\ninfluxdb_authorization\ninfluxdb_bucket\ninfluxdb_organization\n\nWe’ll begin by creating resources and then utilize data sources to query the created resources. Let’s create two files: resources.tf and datasources.tf.\nResources\nResources are the most important element in the Terraform language. Each resource block describes one or more infrastructure objects.\nOrganization\nAn InfluxDB organization is a workspace for a group of users. All dashboards, tasks, buckets, members, etc., belong to an organization. Add the following code to create our organisation.\n\nAfter running a Terraform plan and verifying everything looks good, let’s proceed with applying the changes.\n\n\n\n\n\n\n\n\nBucket\nAn InfluxDB bucket is a named location where time series data is stored. All buckets have a retention period, a duration of time that each data point persists. InfluxDB drops all points with timestamps older than the bucket’s retention period. A bucket belongs to an organization.\nLet’s proceed by creating a bucket named signals with a retention period of 14 days (1209600 seconds).\n\n\n\n\n\n\n\n\n\nAuthorization\nAuthorizations are InfluxDB Read/Write API tokens that grants read access, write access, or both to specific buckets in an organization.\nIn the following step, we will generate an authorization that enables both read and write access to the bucket established in the prior phase.\n\n\n\n\n\n\n\n\n\nData Sources\nWith all the necessary resources created in InfluxDB to manage our time series data, we can now utilize datasources to list all the resources we’ve created.\nA data source is accessed via a special kind of resource known as a data resource, declared using a data block.\n\n\n\n\n\nAdditional Resources\n\nhttps://developer.hashicorp.com/terraform/install\nhttps://docs.influxdata.com/influxdb/v2/install/\nhttps://registry.terraform.io/providers/komminarlabs/influxdb/latest\nhttps://developer.hashicorp.com/terraform/language\nhttps://github.com/komminarlabs/terraform-provider-influxdb/tree/main/examples\nhttps://thulasirajkomminar.com/what-is-hashicorp-terraform\n\nConclusion\nNow that we’ve explored how to leverage Terraform for creating and managing InfluxDB resources, it’s time to start utilizing it. If you encounter any bugs or issues while using the provider, be sure to report them promptly.\n","description":"","id":"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/","title":"Deploying and Managing InfluxDB Resources with Terraform"},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"body":"In this blog post, I’ll guide you through setting up a Continuous Deployment pipeline using GitHub Actions and environments, focusing on both development and production stages.\n\nTable of Contents\n\n\nIntroduction\nInitial setup\n\nGitHub\n\nEnvironments\nActions\n\nmain\ndevelop\n\n\n\n\n\n\nAWS\n\nIAM\n\nOIDC\nCreate IAM Roles\n\nGitHub role\nCodeBuild Role\n\n\n\n\nCodeBuild\n\n\nTesting\n\nDevelopment\nProduction\n\n\nWrapping it up\n\n\n\n\nIntroduction\nContinuous Deployment (CD) is a methodology that leverages automation for releasing software updates efficiently. In a standard CD setup, code undergoes automatic building and testing phases prior to its deployment. With GitHub Actions, automating these software workflows becomes seamless. Configure your CD pipeline to initiate whenever there’s a GitHub event, such as a new code push or a pull request. For a comprehensive list of event triggers, click here.\nEnvironments define common deployment targets such as production, staging, or development. They can be set up with protection rules and associated secrets. When a workflow job references an environment, it only begins after satisfying all the environment’s protection rules. Moreover, a job can only access the secrets linked to an environment after all its deployment protection criteria are met.\nInitial setup\nGitHub\nEnvironments\nFirst, we’ll establish the development and production environments and implement deployment protection rules for added security.\nNavigate to the repository where you intend to set up the Continuous Deployment (CD). Click on Settings, and then select Environments from the sidebar. To add environments, simply click on the New Environment button. As depicted in the image below, I have established two environments.\n\n\n\n\nAfter adding an environment, you’ll be prompted to configure its settings. Let’s dive into that. We’ll start by setting up a protection rule for the production environment. As illustrated below, I’ve added a required reviewer to manually approve all deployments headed to production.\n\n\n\n\nNext, we’ll restrict deployments to this environment based on specific branch naming patterns. As demonstrated below, I selected the Selected branches and tags rule. Click on Add deployment branch or tag rule, and in the subsequent popup, select Ref type as branch and enter main for the Name pattern.\n\n\n\n\nTo deploy to an AWS account, we require the AWS account ID and region. Therefore, I’ve added these as environment secrets, along with a variable to capture the environment name.\n\n\n\n\nLikewise, I’ve configured deployment restrictions, environment secrets, and variables for the development environment. However, I omitted the reviewer setup since this environment is solely for development deployments.\nActions\nNow, let’s proceed to create GitHub workflows so that deployments are automatically triggered whenever a commit is made to either the develop or main branch.\nmain\n\ndevelop\n\nNow, let’s delve into the deployment job’s steps. We’ve included four key actions:\n\n\nEcho: This step simply prints the name of the environment being deployed.\n\n\nCheck out code: I’m utilizing a GitHub action to retrieve the code from the repository.\n\n\nConfigure AWS Credentials: In this step, I’ve set up an OIDC (OpenID Connect) configuration to enable role assumption, allowing me to make AWS service calls on behalf of the environment. I’ll provide a more detailed explanation of the OIDC setup in the next section, specifically focusing on AWS.\n\n\nRun CodeBuild: This final step initiates an AWS CodeBuild project and waits for its status, ensuring a smooth and coordinated deployment process.\n\n\n\nNote: Ensure that the environment name in the actions file corresponds with the GitHub repository’s environment name.\n\nAWS\nNow, let’s explore what needs to be configured on the AWS side.\nIAM\nWe need to set up two roles: one for GitHub Actions to assume using OIDC, and another for the CodeBuild project to assume.\nOIDC\nTo begin, log in to the AWS console and navigate to the IAM service. In the sidebar, select Identity providers and click on Add Provider. In the Configure provider window, choose the OpenID Connect option.\nHere are the specific details you’ll need to fill in:\n\nFor the Provider URL, use https://token.actions.githubusercontent.com.\nFor the Audience, enter sts.amazonaws.com.\nFinally, click Add Provider to complete the setup.\n\nMore details on this can be found here.\nCreate IAM Roles\nGitHub role\nNow, within the IAM services, select Create role. Opt for the Custom trust policy as the trusted entity type.\nHere’s the trust policy text that you should use in the custom trust policy text box:\n\nNote: Replace the GitHub username/repository with your own.\n\n\nName the role as GitHubTriggerRole. After creating the role, attach the following policy as an inline policy to grant access for writing logs to CloudWatch and the necessary permissions to trigger a CodeBuild project.\n\nCodeBuild Role\nNext, let’s create a second role for CodeBuild to assume. When you click the Create role button, select CodeBuild as the AWS Service. Attach the existing managed policy AWSCodeBuildAdminAccess to this role.\nCodeBuild\nNow, head over to the CodeBuild service and select Create build project. Specify the project name as CD-CodeBuild. In the Source section, choose GitHub from the dropdown and include the Repository URL: https://github.com/komminarlabs/cd-with-github-actions\n\nNote: You have the option to authenticate with GitHub using either OAuth or a personal token.\n\nApply the following Environment settings, and select the role you previously created.\n\n\n\n\n\n\n\n\nSelect Insert build commands under Buildspec, then paste the following content. Finally, create the CodeBuild project.\n\nTesting\nDevelopment\nAlright, now that we’ve configured everything on both the GitHub and AWS sides, it’s time to put our setup to the test. To do this, I used a dummy_file.txt in the GitHub repository for testing purposes.\nAfter pushing a change directly to the develop branch, it promptly initiated a deployment to the development environment. The deployment was successful, and you can view the corresponding CodeBuild logs within the Actions.\n\n\n\n\n\n\n\n\n\n\n\n\nProduction\nWith the successful deployment to the development environment, let’s now create a pull request to the main branch to trigger the production deployment.\nAs depicted below, the pull request to main displays the status of the deployment to development. You can enforce this deployment check as mandatory in the branch protection rules for added reliability.\n\n\n\n\nNow, proceed to merge this pull request. The deployment to the production environment will pause and await manual approval, as we’ve included reviewers as a protection rule in the production environment.\n\n\n\n\nAlright, after a thorough manual review of the changes 😊, let’s proceed with approving this deployment. To do so, click on Review deployments, select the production environment, and then click on Approve and deploy.\n\n\n\n\nWith the approval in place, the production deployment process is now initiated.\n\n\n\n\nWrapping it up\nI hope this blog has provided you with a clear understanding of how to leverage GitHub environments to enhance your continuous deployment process.\n","description":"","id":"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/","title":"Efficient Continuous Deployment with GitHub Environments and AWS CodeBuild"},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"body":"In the earlier blog post, I showcased the steps to achieve continuous deployment using GitHub Actions and AWS CodeBuild specifically for code deployment. Expanding on those principles, let’s delve into the next phase of our workflow — incorporating infrastructure deployment through Terraform.\n\n\n\n\n\nTable of Contents\n\n\nSetup Terraform Cloud Workspace\n\nStep 1:\nStep 2:\nStep 3:\nStep 4:\n\n\nSet up a GitHub repository\n\nStep 1:\nStep 2:\n\nPlan\nApply\n\n\n\n\nDemo\n\nPull Request\nMerge\n\n\nWrapping it up\n\n\n\n\nSetup Terraform Cloud Workspace\nThe GitHub Action you’re about to set up will seamlessly integrate with Terraform Cloud, allowing you to efficiently plan and apply your configurations. Before configuring the Actions workflow, ensure you’ve taken the necessary steps: creating a workspace, incorporating your AWS credentials into your Terraform Cloud workspace, and generating a Terraform Cloud user API token.\nStep 1:\nTo kickstart the process, initiate a new Terraform Cloud workspace. Navigate to the Projects &amp; Workspaces page, click on New Workspace, and opt for the API-Driven Workflow option.\n\n\n\n\nStep 2:\nProvide a name for the workspace and proceed by clicking on the Create button.\n\n\n\n\nStep 3:\nNow, it’s time to include your AWS IAM credentials as environmental variables (AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY, and AWS_DEFAULT_REGION) within the workspace. Navigate to the Variables section in the workspace, click on Add Variable, and select Environment variable as the variable category. Terraform Cloud will use these credentials to authenticate to AWS.\n\n\n\n\nStep 4:\nNow, let’s generate an API token to enable authentication for the Actions workflow in Terraform Cloud. Head to the Tokens page within your Terraform Cloud User Settings. Click on Create an API token, provide a description, and then click Generate token.\n\n\n\n\nSet up a GitHub repository\nEstablish a GitHub repository dedicated to housing your infrastructure configuration code and the associated GitHub Actions workflow.\nStep 1:\nOnce you’ve created the repository, proceed to the Settings page. Access the Secrets and Variables menu, specifically selecting Actions. Click New Repository Secret and input the Terraform API token generated in the previous step.\n\n\n\n\nStep 2:\nNow, it’s time to incorporate the following GitHub Actions workflow.\nPlan\n\nNow, let’s delve into the deployment job’s steps. We’ve included four key actions:\n\n\nCheck out code: I’m utilizing a GitHub action to retrieve the code from the repository.\n\n\nTerraform Init: This step utilizes the hashicorp/setup-terraform@v3 action to initialize Terraform. I included the Git configuration in case the code involves private GitHub modules.\n\n\nTerraform Validate: This step is dedicated to validating the Terraform code.\n\n\nTerraform Plan: This step is employed to execute the Terraform plan.\n\n\nUpdate PR: This step leverages the actions/github-script@v7 action to update the Pull Request with the results from the preceding actions.\n\n\nApply\n\nLet’s delve into the steps outlined in this workflow.\n\n\nCheck out code: I’m utilizing a GitHub action to retrieve the code from the repository.\n\n\nTerraform Init: This step utilizes the hashicorp/setup-terraform@v3 action to initialize Terraform. Additionally, I’ve included Git configuration in case the code incorporates private GitHub modules. Executing this action is a prerequisite before proceeding with the apply step.\n\n\nTerraform Apply: This step applies the Terraform infrastructure configuration to AWS.\n\n\nDemo\nNow, let’s put our setup into action. For demonstration purposes, I’ve included Terraform configuration files to create an S3 bucket.\nPull Request\nAfter incorporating the Terraform configuration files into a feature branch, let’s create a pull request to the main branch. This action will initiate GitHub Actions to execute Validation and Plan, with the results seamlessly added back to the pull request for convenient review.\n\n\n\n\n\n\n\n\n\n\n\n\nMerge\nAfter a thorough review of the pull request and ensuring the Terraform plan results meet expectations, proceed to merge the pull request. This will trigger the Terraform apply process.\n\n\n\n\n\n\n\n\nWrapping it up\nIn conclusion, we’ve explored the powerful capabilities of GitHub Actions in automating Terraform infrastructure deployments. If you’ve already followed my previous blog on code deployment using GitHub Actions, you can seamlessly combine these processes to achieve sequential infrastructure deployment and code deployment, streamlining your development workflow.\n","description":"","id":"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/","title":"Effortless Infrastructure - Mastering Automated Deployments with Terraform and GitHub Actions"},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"body":"In my previous blog, we explored enabling cross-account data sharing using AWS Lake Formation with Terraform. In this post, we’ll dive deeper into enhancing that setup with data filters. Lake Formation data filtering allows for column-level, row-level, and cell-level security. This blog will focus specifically on implementing cell-level security to fine-tune data access controls.\n\n\n\n\n\nTable of Contents\n\n\nData filter levels\nCreating a Data Filter in the Source Account\nShare Catalog with Target Account\nCreating Resource Link in Target Account for Access\nGranting Permissions for IAM Roles\nConclusion\nReferences\n\n\n\n\nData filter levels\n\nColumn-level\n\n\nGranting permissions on a Data Catalog table with column-level filtering allows users to view only specific columns and nested columns they have access to. This enables defining security policies that grant access to partial sub-structures of nested columns.\n\nRow-level\n\n\nGranting permissions on a Data Catalog table with row-level filtering allows users to view only specific rows of data they have access to. Filtering is based on the values of one or more columns, and nested column structures can be included in row-filter expressions.\n\nCell-level\n\n\nCell-level security combines both row and column filtering, providing a highly flexible permissions model.\nCreating a Data Filter in the Source Account\nAssuming you have already followed the Lake Formation setup in Source Account as detailed in my previous blog, we can now proceed with creating the data filter. Let’s use an example involving IIoT measurements. Suppose you have equipment spread across multiple sites and need to grant specific IAM roles access to particular sites and columns. Here’s how to achieve this using Terraform:\n\n\n\n\nIn this example:\n\n\nDefine Local Configuration: The filter_config variable lists the sites, columns, and IAM roles in the target account that need access.\n\n\nRetrieve AWS Account ID: The aws_caller_identity data source fetches the current AWS account ID.\n\n\nCreate Data Cell Filters: The aws_lakeformation_data_cells_filter resource iterates over the filter_config to create the necessary filters for each IAM role.\n\n\nThis setup ensures that specific IAM roles have access only to the defined sites and columns, enhancing security and data management.\nShare Catalog with Target Account\nNow that we’ve created the data filter, let’s utilize it while sharing the catalog. In the code snippet below, we’ll share the database and table with the target account. Note that when sharing the table, we’ll include the data filter created in the previous step.\n\n\n\n\nIn this snippet:\n\n\nShare Database Permissions: The aws_lakeformation_permissions resource shares the IIoTDataLake database with the target account and grants the DESCRIBE permission.\n\n\nShare Table Permissions: Similarly, the resource shares the measurements table with the target account, granting the SELECT permission. It also includes the data filter created earlier, ensuring that the target account only accesses the filtered data according to the defined criteria.\n\n\nWith this setup, you can securely share specific data from your catalog with the target account, ensuring compliance and data integrity.\nCreating Resource Link in Target Account for Access\nAfter sharing the catalog and table with a data filter to the target account, let’s proceed to the target account to establish a resource link for accessing the shared catalog data.\n\n\n\n\nIn this setup:\n\nCreate Resource Link: The aws_glue_catalog_database resource establishes a database resource link named IIoTDataLake-Target in the target account. It links to the IIoTDataLake database in the source account, enabling access to the shared catalog data.\n\nBy creating this resource link, you enable seamless access to the shared data catalog from the target account, facilitating data utilization and analysis across accounts while maintaining security and compliance measures.\nGranting Permissions for IAM Roles\nNow that we’ve created the resource link, we can grant access to the resource link and the shared catalog. After this step, the IAM roles will have access to the filtered data shared from the source account.\n\n\n\n\nIn this configuration:\n\n\nGrant Database Permissions: The aws_lakeformation_permissions resource grants the DESCRIBE permission to the IAM roles for the IIoTDataLake-Target database in the target account. This allows the roles to describe the database structure and metadata.\n\n\nGrant Table Permissions: Similarly, the resource grants the SELECT permission to the IAM roles for the measurements table in the shared catalog. This enables the roles to select and read data from the table.\n\n\nWith these permissions granted, the IAM roles now have access to the filtered data shared from the source account, allowing for seamless data analysis and utilization within the target account.\nConclusion\nIn this blog, we’ve delved into the intricacies of cross-account data sharing using AWS Lake Formation and Terraform. By implementing data filters and establishing resource links, we’ve ensured secure access to shared data while maintaining granular control over permissions. This streamlined approach facilitates collaborative data analysis across accounts, empowering teams to derive insights effectively while upholding data security and compliance standards.\nReferences\nhttps://docs.aws.amazon.com/lake-formation/latest/dg/data-filtering.html\n","description":"","id":"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/","title":"Enabling Cross-Account Access for AWS Lake Formation with Data Filters Using Terraform"},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"body":"In this blog post, we’ll delve into the process of creating a Pulumi Resource provider sourced from a Terraform Provider developed with the Terraform Plugin Framework. Our focus will be on leveraging the bridge package to facilitate this transition seamlessly. To illustrate, we’ll demonstrate bridging the InfluxDB Terraform provider to Pulumi.\n\n\n\n\n\nTable of Contents\n\n\nWhy Bridge a Terraform Provider to Pulumi\nHow the bridge works\nHow to bridge a provider\n\nCreate a Shim\nImport the New Shim Provider\nInstantiate the Shim Provider\nBuild the Provider\n\nBuild Generator\nAdd Mappings\nBuild Provider\n\n\nBuild SDKs\n\n\nWrite documentation\n\nOverview, installation, and configuration\n\n\nPublish your package\nPublish the documentation\nUsing the provider\n\nInstallation\nSet up environment\n\n\nAdditional Resources\n\n\n\n\n\nPrerequisites\nBefore delving further, it’s essential to possess a foundational understanding of Terraform providers, Pulumi resource providers, and InfluxDB.\nEnsure the following tools are installed and present in your %PATH:\n\npulumictl\nGo 1.17 or latest\nNodeJS 14.x\nYarn\nTypeScript\nPython\n.NET\n\n\nWhy Bridge a Terraform Provider to Pulumi\nThe mature and vibrant Terraform Providers ecosystem benefits from contributions by numerous industry leaders in cloud and infrastructure. By bridging Terraform Providers to Pulumi, organizations gain access to reliable and battle-tested infrastructure management capabilities.\nHow the bridge works\nThe bridge operates across two significant phases: design-time and runtime.\nDuring design-time, the bridge meticulously examines the schema of a Terraform Provider. However, it’s important to note that this process is applicable solely to providers constructed with static schemas.\nMoving on to the runtime phase, the bridge establishes a connection between the Pulumi engine and the designated Terraform Provider by harnessing Pulumi’s RPC interfaces. This interaction heavily relies on the Terraform provider schema, facilitating tasks such as validation and the computation of differences.\nHow to bridge a provider\nPulumi provides two options for initializing your project: you can either utilize the template repository offered by Pulumi, or opt for the community-supported cookiecutter template.\nIf you choose the cookiecutter template, setting up an initial version is straightforward — just specify a few configuration settings. However, if you prefer the template repository route, follow the steps outlined below to get started:\n\nTo begin, navigate to the template repository and select Use this template.\nThen, ensure the following options are configured:\n\nOwner: Your GitHub organization or username.\nRepository name: Preface your repository name with pulumi as per standard practice. For instance, pulumi-influxdb.\nDescription: Provide a brief description of your provider.\nRepository type: Set it to Public.\n\n\nAfter configuring these options, proceed to clone the generated repository.\nExecute the following command to update the files, replacing placeholders with the name of your provider.\n\n\n\nThis will do the following:\n\nRename folders in provider/cmd to pulumi-resource-influxdb and pulumi-tfgen-influxdb.\nReplace dependencies in provider/go.mod to reflect your repository name.\nFind and replace all instances of the boilerplate xyz with the NAME of your provider.\n\n\n\n\nEnsure to accurately set your GitHub organization or username in all files where your provider is referenced as a dependency.\n\nexamples/go.mod\nprovider/resources.go\nsdk/go.mod\nprovider/cmd/pulumi-resource-influxdb/main.go\nprovider/cmd/pulumi-tfgen-influxdb/main.go\n\n\n\nCreate a Shim\nAlthough the New() provider function resides within an internal package, referencing it in an external Go project isn’t straightforward. However, it’s still achievable through Go linker techniques.\n\nCreate a provider/shim directory.\n\n\n\nAdd a go.mod file with the following content.\n\n\n\nAdd a shim.go file with the following content.\n\n\nImport the New Shim Provider\nIn provider/resources.go import the shim package.\n\nInstantiate the Shim Provider\n\nIn provider/resources.go, replace shimv2.NewProvider(influxdb.Provider()) with pf.ShimProvider(influxdbshim.NewProvider())\n\n\n\nEdit provider/go.mod and add github.com/komminarlabs/terraform-provider-influxdb/shim v0.0.0 to the requirements.\n\n\nBuild the Provider\nBuild Generator\nCreate the schema by running the following command.\n\nAdd Mappings\nIn this section we will add the mappings that allow the interoperation between the Pulumi provider and the Terraform provider. Terraform resources map to an identically named concept in Pulumi. Terraform data sources map to plain old functions in your supported programming language of choice.\n\nResource mapping\n\n\nFor every resource present in the provider, include an entry in the Resources property of the tfbridge.ProviderInfo structure.\n\n\nData Source mapping\n\n\nAdd an entry in the DataSources property of the tfbridge.ProviderInfo for each data source included in the provider.\n\nBuild Provider\nGenerate the provider binary by executing the following command:\n\nBuild SDKs\nCompile the SDKs across the range of languages supported by Pulumi, and validate that the provider code adheres to the Go language standards.\n\n\nWrite documentation\nIncorporate a docs/ directory containing template pages that correspond to the different tabs typically found on a package page within the Pulumi Registry.\nOverview, installation, and configuration\n\n_index.md, which will be displayed on the Overview tab for your package in the Pulumi Registry. The title of this page should align with the package display name, serving as the heading shown on the package detail page. The Overview section is an ideal space to include a concise description of your package’s functionality along with a straightforward example.\n\n\n\ninstallation-configuration.md, this file will be displayed on your package’s Installation &amp; Configuration tab in the Pulumi Registry. Utilize this page to provide comprehensive instructions on setting up your package, covering aspects such as authentication procedures. Additionally, include a list of configuration options available for use with your package.\n\n\nPublish your package\nAfter authoring and thoroughly testing your package locally, the next step is to publish it to make it accessible to the Pulumi community. This process involves publishing several artifacts:\n\nThe npm, NuGet, Java, and Python SDK packages to the npm Registry, the NuGet Gallery, Maven Central and the Python Package Index\nThe Go module to your Git repository, by adding a tag.\nThe binary Pulumi resource provider plugin to a binary hosting provider of your choice.\n\nTo streamline this process, we’ll leverage GitHub Actions. Below are the GitHub Actions you’ll use for this purpose.\n\nPublish the documentation\nTo publish your package on the Pulumi Registry, all package documentation is managed through the pulumi/registry repository on GitHub. Here’s how to proceed:\n\nFork and clone the pulumi/registry repository to your local machine.\nAdd your package to the community package list within the repository.\n\n\n\nAfter making the necessary changes to add your package to the community package list, open a pull request with the modifications. Subsequently, await review from a member of the Pulumi team.\nUpon review, a Pulumi employee will collaborate with you to finalize the steps required for publishing your Pulumi Package.\n\nUsing the provider\nNow that we have successfully built and published our Pulumi provider, let’s proceed to utilize it for resource creation. In this instance, we’ll opt for Python as our preferred programming language.\nInstallation\n\nSet up environment\nYou have the option to configure the provider either through environment variables or by utilizing the Pulumi.dev.yaml file.\n\nAdd the following contents to the __main__.py file\n\nNext, execute the pulumi preview command to view a preview of the updates to an existing stack. Follow this by running pulumi up to either create or update the resources within the stack.\n\n\n\n\n\n\n\n\nYou can also view the stacks in Pulumi cloud.\n\n\n\n\nAdditional Resources\n\nhttps://www.pulumi.com/registry/packages/influxdb/\nhttps://github.com/komminarlabs/pulumi-influxdb\nhttps://github.com/pulumi/pulumi-tf-provider-boilerplate/tree/main\n\n","description":"","id":"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/","title":"How to bridge a Terraform Provider to Pulumi"},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"body":"Moving Amazon Redshift to a new account and region might seem difficult, but it doesn’t have to be. You might need to follow regulations or reorganize your teams. In this guide, we will show you step by step how to move your Redshift data to a different account and region. After reading this guide, you will know how to do Redshift migrations easily, with minimal downtime and secure data. Let’s start and make your Redshift move simple!\n\nTable of Contents\n\n\nArchitecture\nSteps\n\nStep 1: Configure cross-region snapshot\nStep 2: Create a manual snapshot\nStep 3: Grant Access to KMS Key in the Target Account\nStep 4: Share snapshot\nStep 5: Restoring a Cluster from Snapshot in the Target Account\n\n\nConclusion\nReferences\n\n\n\n\nArchitecture\n\n\n\n\n\nPrerequisites\nFor the migration process, choose a maintenance window with minimal write activity, ensuring alignment with the organization’s RTO and RPO requirements.\n\nSteps\nStep 1: Configure cross-region snapshot\nTo move the cluster to a different region in a different account, you first need to configure the cross-region snapshot for the cluster in the source account where the cluster resides.\n\nGo to your cluster and click Actions.\nSelect Configure cross-region snapshot.\nIn the Destination AWS Region drop-down menu, choose the region where you want to move the cluster in the target account.\nClick Save.\n\n\n\n\n\nStep 2: Create a manual snapshot\nTo share a cluster snapshot with another AWS account, you need a manual snapshot.\n\nGo to your cluster and click Actions.\nChoose Create Snapshot.\nGive the snapshot a name and click Create Snapshot.\n\nSince we configured the cross-region snapshot in the previous step, creating a snapshot now will also copy it to the destination region.\n\n\n\n\nStep 3: Grant Access to KMS Key in the Target Account\nWhen you share an encrypted snapshot, you also need to share the KMS key that was used to encrypt it. To do this, add the following policy to the KMS key. In this policy example, replace 123456789123 with the identifier of the TargetAccount.\n\nStep 4: Share snapshot\nNavigate to Snapshots, find the manual snapshot you created, and click on it. Under Snapshot access, click on edit. Enter the TargetAccount ID and click Add account. Once you’re done, click Save. Now, the snapshot will be accessible in the TargetAccount and the destination region..\n\n\n\n\nStep 5: Restoring a Cluster from Snapshot in the Target Account\nNavigate to the TargetAccount and the destination region in Redshift. Under snapshots, you will find the shared snapshot. Click on Restore snapshot and configure options like Nodes, Networking, and more as needed.\nConclusion\nIn this guide, we’ve covered the essential steps to migrate Amazon Redshift to a new account and region smoothly. By following these steps carefully, you can ensure minimal downtime and maintain data integrity throughout the migration process. I hope this guide has provided clarity and confidence for your Redshift migration journey!\nReferences\n\nhttps://docs.aws.amazon.com/redshift/latest/mgmt/managing-snapshots-console.html#snapshot-create\nhttps://docs.aws.amazon.com/redshift/latest/mgmt/managing-snapshots-console.html#snapshot-share\nhttps://docs.aws.amazon.com/redshift/latest/mgmt/managing-snapshots-console.html#snapshot-restore\n\n","description":"","id":"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/","title":"How to Migrate Amazon Redshift to a Different Account and Region"},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"body":"In this blog post, we’ll delve into the process of writing data into InfluxDB v3 using Go. Our focus will be on harnessing the capabilities of the influxdb3-go client library, particularly its support for annotated structs. Through a practical example, we’ll demonstrate how to convert a slice into a structured format and efficiently batch write it into InfluxDB.\n\n\n\n\n\nTable of Contents\n\n\nSetting Up a Go Project for IIoT Measurements: A Step-by-Step Guide\nImplementing Annotated Structs for InfluxDB Data Writing\nLoading InfluxDB Credentials from Environment Variables\nInstantiating the InfluxDB Client\nImplementing Batch Write Function for InfluxDB Data\nWriting Data to InfluxDB v3\nExploring Data\nConclusion\nReferences\n\n\n\n\nSetting Up a Go Project for IIoT Measurements: A Step-by-Step Guide\nLet’s kickstart by initializing a Go project named iiot-measurements and structuring it with three essential files:\n\nmain.go: Responsible for the main function.\ninfluxdb3.go: Contains the struct and functions for InfluxDB writing.\nconfig.go: Handles the loading of InfluxDB credentials from the environment.\n\nHere’s how to set up the project:\n\nNext, let’s install the latest influxdb3 Go client:\n\nImplementing Annotated Structs for InfluxDB Data Writing\nWith the influxdb3-go client, data can be provided in various formats such as line protocol, point, or as a struct. For this tutorial, we’ll opt for the annotated struct approach to ensure a fixed schema. This choice suits scenarios where maintaining a consistent schema is crucial. However, if your use case involves handling dynamic schemas, other options like line protocol or point may be more suitable.\n\n\n\n\nLoading InfluxDB Credentials from Environment Variables\nBefore instantiating the InfluxDB client, it’s essential to load the credentials from the environment. To achieve this, we’ll utilize the env package to parse environment variables into our InfluxdbConfig struct. Additionally, we’ll create a NewConfig() function to facilitate the instantiation of the struct.\n\n\n\n\n\nInstantiating the InfluxDB Client\nAfter loading the credentials, the next step is to create a function that instantiates the InfluxDB client. We’ll define a NewClient() function responsible for this task, utilizing the configuration struct previously defined. This function ensures seamless creation of the client with the provided configuration.\n\n\n\n\nImplementing Batch Write Function for InfluxDB Data\nAfter setting up the InfluxDB client instantiation, the next step is to implement a function for batch writing data to InfluxDB v3. We’ll create a function named BatchWrite() responsible for this task. This function will take a slice of annotated Measurement structs and convert them into an []interface{} format, facilitating batch writing to InfluxDB v3.\n\n\n\n\nWriting Data to InfluxDB v3\nWith all the required functions in place, we are now ready to instantiate the client and write a slice of data to InfluxDB v3. First, we’ll initialize the client using the configuration obtained from environment variables. Then, we’ll utilize the BatchWrite() function to efficiently write the data as a batch to InfluxDB.\n\n\n\n\nExploring Data\n\n\n\n\nConclusion\nIn this tutorial, we’ve explored the process of writing data to InfluxDB v3 using GoLang and the influxdb3-go client library. By leveraging annotated structs and environment-based configuration loading, we’ve established a robust foundation for efficiently managing InfluxDB data within Go applications.\nWe began by setting up a Go project and initializing the InfluxDB client with credentials loaded from environment variables. Through the implementation of a BatchWrite() function, we demonstrated how to streamline the process of writing data in batches to InfluxDB v3.\nBy following the steps outlined in this tutorial, you’re now equipped with the knowledge to seamlessly integrate InfluxDB data writing capabilities into your Go applications, ensuring reliability and scalability for your time-series data management needs.\nReferences\n\nhttps://github.com/komminarlabs/iiot-measurements-influxdb3\nhttps://github.com/InfluxCommunity/influxdb3-go/blob/main/README.md\nhttps://docs.influxdata.com/influxdb/cloud-serverless/reference/syntax/line-protocol/\n\n","description":"","id":"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/","title":"How to Write Data to InfluxDB v3 with GoLang"},"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"body":"There are two types of cross-account access\n\n\nStorage cross-account access (S3 bucket is in a different account than the Lake Formation account)\n\n\nConsumption cross-account access (Athena, Redshift Spectrum in a different account than the Lake Formation account)\n\n\nIn this guide, we will discuss the consumption cross-account access, enable cross-account Lake Formation access and use a lambda in Account-Target to execute a simple Athena query to access the data from Account-Source.\n\nTable of Contents\n\n\nArchitecture\nLake Formation setup in Account-Source\nLake Formation setup in Account-Target\nUse Lambda to execute an Athena query using AWS Wrangler\nUseful links\n\n\n\n\nArchitecture\n\n\n\n\n\nPrerequisites\nThis guide shows how to enable cross-account access for the accounts that are under the same organization.\nRevoke all Lake Formation permissions from the IAMAllowedPrincipals group for the Data Catalog resource.\nIf the cross-account access is for an external account under a different organization then some extra IAM permissions, catalog resource policy, and accepting the RAM share are required.\nLakeformation cross-region catalog sharing is not supported yet because RAM is a regional service.\n\nLake Formation setup in Account-Source\n\nSetup lake Formation administrators in Account-Source\n\n\n\nCreate a Lake Formation IAM role and register the S3 location\n\n\n\nGrant the Account-Source’s database and tables to Account-Target\n\n\n\nOnce this is executed you can see the shared database and tables in Account-Target.\n\nLake Formation setup in Account-Target\n\nSetup lake Formation administrators in Account-Target\n\n\n\nCreate a resource share link in Account-Target. Resource links are a way of accepting resource shares and naming the shares appropriately. You must create a resource link to a shared database for that database to appear in the Amazon Athena and Amazon Redshift Spectrum query editors.\n\n\n\nOnce this is executed the resource link will be created and now you can use Athena to execute a query and view the data.\n\nUse Lambda to execute an Athena query using AWS Wrangler\nIn this example, we will create a sample lambda and an execution role to query the table using Athena and AWS Wrangler.\n\nCreate a default database where awswrangler can create temp tables\n\n\n\nCreate an IAM role and policy to access the Lake Formation resources.\n\n\n\nGrant access to default and shared database &amp; table for the lambda role\n\n\n\nOnce this is executed create a sample lambda function and execute the sample code.\n\n\nUseful links\n\nhttps://aws.amazon.com/premiumsupport/knowledge-center/glue-lake-formation-cross-account/\nhttps://docs.aws.amazon.com/lake-formation/latest/dg/cross-account-read-data.html\nhttps://docs.aws.amazon.com/lake-formation/latest/dg/access-control-underlying-data.html\nhttps://docs.amazonaws.cn/en_us/lake-formation/latest/dg/hybrid-cross-account.html\nhttps://docs.aws.amazon.com/lake-formation/latest/dg/cross-account-permissions.html\n\n","description":"","id":"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/","title":"Lake Formation cross-account access using Terraform"},"http://127.0.0.1:1111/redshift-federated-query-with-aurora-mysql/":{"body":"Redshift federated query lets you query and analyse data across multiple operational databases directly. In this blog I have explained how to setup Redshift to query across multiple Aurora instances cross-account.\n\nTable of Contents\n\n\nArchitecture\nAWS Resources Setup\nSteps\nAdding Aurora database as external schema in Redshift\n\nExternal schema\n\n\n\n\n\n\nArchitecture\n\n\n\n\nAWS Resources Setup\nI have explained how to setup AWS resources in the below steps.\n\nPrerequisites\nVPC Peering should be enabled between the accounts.\nAmazon Redshift cluster should have a cluster maintenance version that supports federated queries.\nAmazon Redshift cluster should have enhanced VPC routing enabled.\nGrant select access to innodb_index_stats &amp; innodb_table_stats for the aurora user in the aurora cluster.\n\nSteps\n\n\nIn Account A create a Customer managed KMS key and add a grant to the Account X’s root user(can also be the Redshift role) with Decrypt &amp; DescribeKey operations.\n\n\nIn Account A create a secret in the SecretsManager and store the Aurora instance credentials.\n\n\nAllow access to the secret for Account X’s root user(can also be the Redshift role) by adding the below resource policy to the secret.\n\n\n\n\n\nIn the Aurora cluster security group add inbound rules for Redshift.\n\n\nAdd a policy to the Redshift role in Account X to allow access to Account A’s KMS key and SecretManger like below.\n\n\n\n\nAllow all outbound traffic in the Redshift cluster security group.\n\nAdding Aurora database as external schema in Redshift\nOnce the AWS resources are setup then you can add the Aurora databases as external schemas in Redshift and start querying.\nExternal schema\n\n","description":"","id":"http://127.0.0.1:1111/redshift-federated-query-with-aurora-mysql/","title":"Redshift federated query with Aurora(MySQL)"},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"body":"AWS Redshift Query Editor v2 is a web-based tool that allows analysts to securely explore, share, and collaborate on data using SQL within a common notebook interface. It simplifies querying data with SQL and visualizing results with charts and graphs in just a few clicks.\n\nIntegrating Redshift Query Editor v2 with your identity provider (IdP) automatically redirects users to the Query Editor v2 console instead of the Amazon Redshift console. This setup enables seamless access to Amazon Redshift clusters via federated credentials, eliminating the need to manage individual database users and passwords.\nIn this blog post, we’ll focus on using Okta as the IdP and guide you through configuring your Okta application and AWS IAM permissions. We’ll also demonstrate how to restrict user access to only the Query Editor v2, preventing them from performing administrative functions on the AWS Management Console.\n\n\n\n\n\nTable of Contents\n\n\nCreate IAM Roles and Permissions\nSet Up Okta Application\nCreate IAM SAML Provider Role\nConclusion\n\n\n\n\n\nPrerequisites\nBefore you begin, ensure you have the following prerequisites in place:\nAn Okta Account: You need an active Okta account to serve as your identity provider.\nA Redshift Cluster: Ensure you have an existing Amazon Redshift cluster set up.\nConfigured Query Editor v2: Make sure Redshift Query Editor v2 is configured. For more details, refer to Configuring your AWS account.\n\nCreate IAM Roles and Permissions\nTo enable Okta to access Amazon Redshift Query Editor v2, you need to create two IAM roles. The first role will be used by Okta to access the Redshift Query Editor, and the second role will establish a trust relationship between the IdP (Okta) and AWS. We’ll start by creating the role that Okta uses to access Amazon Redshift Query Editor v2. After setting up the Okta application, we’ll create the trust relationship role using the metadata from the Okta app.\n\nSet Up Okta Application\nWith the IAM role for Okta access created, configure the Okta SAML application and assign it to the necessary Okta groups.\n\nCreate IAM SAML Provider Role\nAfter setting up the Okta application, create the IAM SAML provider to establish a trust relationship between Okta and AWS using the Okta metadata.\n\nConclusion\nIn this blog post, we demonstrated how to securely federate SSO access to AWS Redshift Query Editor v2 using Okta as the identity provider, leveraging Terraform for seamless infrastructure management. By creating the necessary IAM roles and configuring the Okta SAML application, we established a robust trust relationship between Okta and AWS. This setup not only simplifies user access to Redshift Query Editor v2 but also enhances security by eliminating the need to share database users credentials. With this integration, your teams can efficiently explore, share, and collaborate on data, driving insightful decisions and streamlined operations.\n","description":"","id":"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/","title":"Streamline SSO Access to AWS Redshift Query Editor with Okta and Terraform"},"http://127.0.0.1:1111/terraform-stacks/":{"body":"Ever since the private preview of Terraform Stacks, I’ve been eager to dive in and explore this new approach to provisioning infrastructure. After a year in private preview, the public beta was finally announced at HashiConf 2024, and I’m excited to share my experience!\n\nIn this blog, I’ll walk you through the essentials of Terraform Stacks configurations and demonstrate how to deploy a REST API as an S3 proxy using API Gateway.\n\n\n\n\n\nTable of Contents\n\n\nWhat is a Stack?\nStack configuration\nStack authentication\nDemo\nHow does it look in the UI?\nThoughts\n\n\n\n\nWhat is a Stack?\nTerraform excels at planning and applying changes to individual resources, but it has historically lacked a built-in solution for consistently deploying identical infrastructure across multiple environments or cloud regions. To work around this, many of us developed our own methods. Personally, I’ve used workspaces for environment-specific configurations and duplicated code with different providers for multi-region setups. However, this approach sacrifices the DRY (Don't Repeat Yourself) principle and requires stitching together dependencies manually, complicating state management and orchestration.\nTerraform Stacks are designed to streamline the coordination, deployment, and lifecycle management of complex, interdependent configurations. With Stacks, we can easily replicate infrastructure across environments and regions, set orchestration rules, and automate the propagation of changes, drastically reducing time and operational overhead.\nIn essence, Stacks address the \"bigger picture\" of infrastructure provisioning, offering a scalable solution to manage consistent, repeatable deployments across environments and regions.\nStack configuration\nStacks use their own domain-specific language (DSL), also based on HCL (HashiCorp Configuration Language).\ncomponent\nComponents are the building blocks of Stack configurations, defined in files with the .tfstack.hcl extension. Each component represents a group of interrelated resources, such as the frontend, backend, and database of an application, that are typically deployed together. Though similar to modules, components differ in that they are deployed as a single unit. This means that each component is always planned or applied in its entirety before moving on to other dependent components. In contrast, modules in traditional Terraform treat all resources within modules as part of a single, unified state and dependency graph, regardless of module structure.\nBelow is an example of a component block, where you specify the source module, inputs, and providers for each component. Component blocks also support the for_each meta-argument, enabling you to provision modules across multiple AWS regions within the same environment.\nA key difference between components and modules is in how provider configurations are handled, which we’ll dive into in the next section.\n\nrequired_providers and provider\nThe required_providers block functions just as it does in traditional Terraform configurations. However, the provider block has some key differences. It supports the for_each meta-argument, allows aliases to be defined in the block header, and requires that arguments be passed through a config block. Like other Stack configurations, it is also defined in files with the .tfstack.hcl extension.\n\nIn the provider configuration above, for_each is used to dynamically create multiple AWS configurations. However, this approach poses a challenge when decommissioning resources in a specific region. You can’t simply remove the region from the variable, as Terraform still requires the component’s providers to successfully delete the component’s resources.\nTo address this, you can use the removed block to gracefully decommission components, ensuring proper removal without causing configuration errors.\n\n\nProvider lock file\nA Stack cannot run without a lock file for its providers. After defining your providers, use the Terraform Stacks CLI to generate a .terraform.lock.hcl lock file. The tfstacks providers lock command(tfstacks providers lock) creates and updates your .terraform.lock.hcl file.\n\ndeployment\nThe deployment configuration file specifies how many instances of the Stack Terraform should deploy. Each Stack must include at least one deployment block. These configuration files are located at the root level of your repository and use the .tfdeploy.hcl file extension.\nWithin the deployment block, you can define a map of inputs to provide any unique configurations required for each deployment. Note that the deployment block does not accept meta-arguments.\n\norchestrate\nThe orchestrate block allows you to define rules for managing deployment plans within your deployment configuration file (.tfdeploy.hcl). Each orchestrate block contains one or more check blocks, which specify conditions that must be met for the orchestration rule to take effect. All conditions within the check blocks must pass for the orchestrate rule to be applied.\nOrchestrate rule types\nYou can choose from two types of orchestration rules:\n\nauto_approve: This rule runs after a Stack generates a plan and automatically approves the plan if all checks pass.\nreplan: This rule runs after a Stack applies a plan, automatically triggering a replan if all checks pass.\n\nBy default, each Stack has an auto_approve rule named empty_plan, which automatically approves a plan if it contains no changes.\n\nThe above blocks automatically approve the production deployment if no resource modifications or deletions are detected.\nStack authentication\nYou can authenticate a Stack in two ways: by using OIDC (recommended) or by utilizing AWS credentials through the store block.\nOIDC\nOpenID Connect (OIDC) is an identity layer on top of the OAuth 2.0 protocol. You can use HCP Terraform’s Workload identity tokens, built on the OpenID Connect protocol, to securely connect and authenticate your Stacks with cloud providers. Stacks have a built-in identity_token block that creates workload identity tokens, also known as JWT tokens. You can use these tokens to authenticate Stacks with Terraform providers securely.\n\nI have an example that demonstrates how to set up OIDC in conjunction with Stacks.\nCredentials\nYou can use the store block to define key-value secrets in your deployment configuration and then access those values in your deployments. You can use the store block to access credentials stored in an Terraform variable set.\n\nDemo\nTo demonstrate Terraform Stacks, we'll create a REST API in API Gateway that acts as an S3 proxy, enabling users to view or download objects from an S3 bucket. To set this up, we’ll need the following:\n\nAn IAM Role to grant API Gateway access to S3.\nAPI Gateway resources configured to expose S3 operations.\nAn S3 bucket to store the objects.\n\nFor this demo, we'll create three separate components for each of these resource groups. Now, let’s dive into the Stack configuration. The complete setup can be found in the terraform-stacks-demo repository.\n*.tfstack.hcl\nThe Stack is divided into three configuration files:\n\nproviders.tfstack.hcl\n\n\nConfigures the providers for multi-region deployment using the for_each meta-argument to manage multiple regions efficiently.\n\nvariables.tfstack.hcl\n\n\nDefines the input variables used across the Stack.\n\ncomponents.tfstack.hcl\n\n\nInitializes the three main components, using local modules as the source for each.\ndeployments.tfdeploy.hcl\nI've defined a store block to retrieve the role_arn created in the terraform-stacks-initial-setup repository.\n\nDevelopment\nFor development purposes, I want this Stack to be deployed exclusively in the eu-central-1 region.\n\nProduction\nFor production, I’ve enabled multi-region deployment by adding eu-west-1 to the regions variable.\n\nOrchestration\nI've added three orchestrate blocks with the following configurations:\n\nAutomatically approve deployments in non-production environments.\nAutomatically approve production deployments if there are no resource modifications or deletions.\nReplan production deployment once if it fails.\n\n\nHow does it look in the UI?\nA new configuration is created every time code is merged into main branch, and a new plan to apply those code changes is created for each of your deployments.\n\n\n\n\n\n\n\n\nThoughts\nTerraform Stacks feel like a feature that should have been available from the start, but it's great to know they'll be available in the future. During my trial period, I found myself wishing for a feature that would enable automatic approval of production deployments once non-production deployments succeed. While it’s unclear if this feature will be added, it would certainly be a valuable addition.\n","description":"","id":"http://127.0.0.1:1111/terraform-stacks/","title":"Terraform Stacks"},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"body":"In this blog I will explain what is Terraform and some of its common terms. I will also list some good to follow standards when you start using Terraform.\n\n\n\n\n\nTable of Contents\n\n\nWhat is it?\nWhat it is not?\nTerraform Editions\n\nOpen Source\nTerraform Cloud\nTerraform Enterprise\n\n\nTerraform Jargons\n\nWorkspace\nBackend\nProvider\nRegistry\nHCL\nState\n\n\nHow Terraform works?\n\nWrite\nPlan\nApply\n\n\nConfiguration Language\n\nHCL\n\nProvider\n\nProvider configuration\nProvider Requirements\n\n\nVariables, Outputs, and Locals\nResource\nData Sources\nModules\n\nRoot Module\nChild Modules\nPublished Modules\n\n\n\n\nStandards\n\n\n\n\n\n\nWhat is it?\n\nTerraform is an infrastructure as code tool that lets you define both cloud and on-premise resources in human-readable configuration files.\nIt can manage both low-level(Networking, Storage) &amp; high-level components(DNS, SaaS).\nIt can be used to manage single application and also an entire datacenter.\n\nWhat it is not?\nIt is not a configuration management tool that focuses on single application configuration but Terraform focuses on higher-level abstraction like managing the entire environment.\nTerraform Editions\nOpen Source\nA free to download tool that you interact with CLI.\nTerraform Cloud\n\nSaaS application that runs in a secure remote environment and stores states and secrets.\nConnects to VCS and new commits triggers Terraform automatically.\nIt has Rich UI and RBAC controls.\n\nTerraform Enterprise\nSelf-hosted distribution of Terraform Cloud. It offers enterprises a private instance of the Terraform Cloud application, with no resource limits and with additional enterprise-grade architectural features like audit logging and SAML single sign-on.\nTerraform Jargons\nWorkspace\n\nA workspace contains everything that Terraform needs to manage a given collection of infrastructure.\nIt links to VCS and has Variables, Credentials, Secrets, State versions, and Run History.\n\nBackend\nA backend defines where Terraform stores its state data files.\n\nProvider\n\nProvides abstraction to APIs that connect to the infrastructure hosts.\nWithout providers, Terraform can’t manage any kind of infrastructure.\nEvery provider makes a list of resources and data types available for use in the Terraform code.\n\nRegistry\nThe Terraform Registry is an interactive resource for discovering a wide selection of integrations (providers), configuration packages (modules), and security rules (policies) for use with Terraform.\nHCL\nHCL(HashiCorp Configuration Language) is a declarative and domain-specific language.\nState\n\nTerraform is a stateful application, meaning it keeps track of everything it builds in the infrastructure.\nState is used by Terraform to map real-world resources to your configuration.\n\nHow Terraform works?\n\nTerraform creates and manages resources on cloud platforms and other services through their APIs.\nProviders enable Terraform to work with virtually any platform or service with an accessible API.\nThe core Terraform workflow consists of three stages:\n\nWrite\nDefining resources\nPlan\nAn execution plan that describes the infra terraform will create/update/destroy based on existing infra and your configurations.\nApply\nPerforming the operations in the correct order by respecting resource dependencies. Can be automatic or manual.\nConfiguration Language\nTerraform supports HCL, JSON, CRDS and CDK. CDK allows you to use familiar programming languages to define and provision infrastructure. It also lets you leverage the power of your existing toolchain for testing, dependency management, etc. In this blog we will focus on HCL and how to configure Providers, Resources and Modules.\n\n\n\n\nHCL\nProvider\nTerraform Cloud and Terraform Enterprise install providers as part of every run.\nProvider configuration\nProvider configurations belong in the root module of a Terraform configuration. Child modules receive their provider configurations from the root module.\n\nProvider Requirements\nEach Terraform module must declare which providers it requires, so that Terraform can install and use them.\n\nVariables, Outputs, and Locals\nIn comparison with traditional programming languages,\n\nInput variables are like function arguments.\nOutput values are like function return values.\nLocal values are like a function’s temporary local variables.\n\n\nResource\nEach resource block describes one or more infrastructure objects, such as virtual networks, compute instances, or higher-level components such as DNS records.\n\nData Sources\nData sources allow Terraform to use information defined outside of Terraform.\n\nModules\nContainers for multiple resources that are used together.\nRoot Module\nEvery Terraform configuration has at least one module, known as its root module, which consists of the resources defined in the .tf files in the main working directory.\nChild Modules\nA module that has been called by another module is often referred to as a child module.\nPublished Modules\nIn addition to modules from the local filesystem, Terraform can load modules from a public or private registry. You can find some of my AWS Terraform modules here.\n\nStandards\n\nUse count only for enabling/disabling resource creation and use for_each for loops.\nVariables are ordered A-Z, but tags always comes at last.\nMulti-line list or map should be in new line.\n\n\n\nThere are some linters already available for you to use\n\nhttps://github.com/terraform-linters/tflint\nhttps://github.com/terraform-linters/tflint-ruleset-terraform\nhttps://github.com/terraform-linters/tflint-ruleset-aws\n\n\n\n","description":"","id":"http://127.0.0.1:1111/what-is-hashicorp-terraform/","title":"What is HashiCorp Terraform?"}},"docInfo":{"http://127.0.0.1:1111/":{"body":0,"description":0,"title":0},"http://127.0.0.1:1111/about-me/":{"body":235,"description":0,"title":0},"http://127.0.0.1:1111/data-governance-on-aws-using-datazone/":{"body":1456,"description":0,"title":5},"http://127.0.0.1:1111/deploying-and-managing-influxdb-resources-with-terraform/":{"body":388,"description":0,"title":5},"http://127.0.0.1:1111/efficient-continuous-deployment-with-github-environments-and-aws-codebuild/":{"body":702,"description":0,"title":7},"http://127.0.0.1:1111/effortless-infrastructure-mastering-automated-deployments-with-terraform-and-github-actions/":{"body":465,"description":0,"title":8},"http://127.0.0.1:1111/enabling-cross-account-access-for-aws-lake-formation-with-data-filters-using-terraform/":{"body":539,"description":0,"title":11},"http://127.0.0.1:1111/how-to-bridge-a-terraform-provider-to-pulumi/":{"body":743,"description":0,"title":4},"http://127.0.0.1:1111/how-to-migrate-amazon-redshift-to-a-different-account-and-region/":{"body":312,"description":0,"title":6},"http://127.0.0.1:1111/how-to-write-data-to-influxdb-v3-with-golang/":{"body":397,"description":0,"title":5},"http://127.0.0.1:1111/lake-formation-cross-account-access-using-terraform/":{"body":288,"description":0,"title":7},"http://127.0.0.1:1111/redshift-federated-query-with-aurora-mysql/":{"body":168,"description":0,"title":4},"http://127.0.0.1:1111/streamline-sso-access-to-aws-redshift-query-editor-with-okta-and-terraform/":{"body":318,"description":0,"title":9},"http://127.0.0.1:1111/terraform-stacks/":{"body":811,"description":0,"title":2},"http://127.0.0.1:1111/what-is-hashicorp-terraform/":{"body":514,"description":0,"title":2}},"length":15},"lang":"English"}